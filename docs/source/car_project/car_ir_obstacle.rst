.. note:: 

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et des promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _car_ir_obstacle:

5. Jouez avec le Module d'√âvitement d'Obstacles
===================================================

Deux modules infrarouges d'√©vitement d'obstacles sont mont√©s √† l'avant de la voiture, permettant de d√©tecter des obstacles proches.

Dans ce projet, la voiture avance librement et, lorsqu'elle rencontre un obstacle, elle est capable de l'√©viter et de continuer dans une autre direction.

**Composants Requis**

Dans ce projet, nous avons besoin des composants suivants :

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage 3 en 1
        - 380+
        - |link_3IN1_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DU COMPOSANT
        - LIEN D'ACHAT

    *   - :ref:`cpn_uno`
        - |link_Uno_R3_buy|
    *   - :ref:`cpn_l9110`
        - \-
    *   - :ref:`cpn_tt_motor`
        - \-
    *   - :ref:`cpn_avoid` 
        - |link_obstacle_avoidance_buy|

**C√¢blage**

Le module d'√©vitement d'obstacles est un capteur de proximit√© infrarouge √† distance r√©glable, dont la sortie est normalement haute et devient basse lorsqu'un obstacle est d√©tect√©.

Construisez maintenant le circuit selon le sch√©ma ci-dessous.

.. list-table:: 
    :header-rows: 1

    * - Left IR Module
      - R4 Board
    * - OUT
      - 8
    * - GND
      - GND
    * - VCC
      - 5V

.. list-table:: 
    :header-rows: 1

    * - Right IR Module
      - R4 Board
    * - OUT
      - 7
    * - GND
      - GND
    * - VCC
      - 5V

.. image:: img/car_5.png
    :width: 800

**Ajustez le Module**

Avant de commencer le projet, vous devez ajuster la distance de d√©tection du module.

C√¢blez selon le sch√©ma ci-dessus, alimentez la carte R4 (soit en branchant directement le c√¢ble USB, soit en connectant le c√¢ble de batterie 9V), sans t√©l√©verser le code.

Placez un cahier ou tout autre objet plat √† environ 5 cm devant le module d'√©vitement d'obstacles IR.

Utilisez ensuite un tournevis pour tourner le potentiom√®tre sur le module jusqu'√† ce que l'indicateur de signal sur le module s'allume juste, afin de r√©gler sa distance de d√©tection maximale √† 5 cm.

Suivez la m√™me m√©thode pour ajuster l'autre module infrarouge.

.. image:: img/ir_obs_cali.jpg

**Code**

.. note::

    * Ouvrez le fichier ``5.obstacle_avoidance_module.ino`` sous le chemin ``3in1-kit\car_project\5.obstacle_avoidance_module``.
    * Ou copiez ce code dans **Arduino IDE**.
    
    * Ou t√©l√©versez le code via l'`√âditeur Web Arduino <https://docs.arduino.cc/cloud/web-editor/tutorials/getting-started/getting-started-web-editor>`_.

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/289ca80d-009f-4f60-b36d-1da6c5e10233/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

La voiture avancera d√®s que le code sera t√©l√©vers√© avec succ√®s. Lorsque le module infrarouge gauche d√©tecte un obstacle, elle reculera √† gauche ; lorsque le module infrarouge droit d√©tecte un obstacle, elle reculera √† droite ; si les deux c√¥t√©s d√©tectent un obstacle, elle reculera droit.

**Comment √ßa marche ?**

Ce projet repose sur les valeurs des modules infrarouges d'√©vitement d'obstacles gauche et droit pour que la voiture effectue les actions appropri√©es.

#. Ajoutez la d√©finition des broches pour les 2 modules d'√©vitement d'obstacles, ici elles sont d√©finies comme ``INPUT``.

    .. code-block:: arduino

        ...
        const int rightIR = 7;
        const int leftIR = 8;

        void setup() {
        ...

        //IR obstacle
            pinMode(leftIR, INPUT);
            pinMode(rightIR, INPUT);
        }


#. Lisez les valeurs des modules infrarouges gauche et droit et laissez la voiture effectuer l'action correspondante.

    .. code-block:: arduino

        void loop() {

            int left = digitalRead(leftIR);   // 0 : Obstru√©  1 : Libre
            int right = digitalRead(rightIR);
            int speed = 150;

            if (!left && right) {
                backLeft(speed);
            } else if (left && !right) {
                backRight(speed);
            } else if (!left && !right) {
                moveBackward(speed);
            } else {
                moveForward(speed);
            }
        }

    * Si le module IR gauche est √† 0 (obstacle d√©tect√©) et le module IR droit est √† 1, laissez la voiture reculer √† gauche.
    * Si le module IR droit est √† 0 (obstacle d√©tect√©), laissez la voiture reculer √† droite.
    * Si les 2 modules IR d√©tectent un obstacle en m√™me temps, la voiture reculera.
    * Sinon, la voiture continuera √† avancer.

#. √Ä propos de la fonction ``backLeft()``.

    Lorsque le moteur droit tourne dans le sens antihoraire et que le moteur gauche ne tourne pas, la voiture reculera vers la gauche. 

    .. code-block:: arduino

        void backLeft(int speed) {
            analogWrite(A_1B, speed);
            analogWrite(A_1A, 0);
            analogWrite(B_1B, 0);
            analogWrite(B_1A, 0);
        }

#. √Ä propos de la fonction ``backRight()``.

    Lorsque le moteur gauche tourne dans le sens horaire et que le moteur droit ne tourne pas, la voiture reculera vers la droite.

    .. code-block:: arduino

        void backRight(int speed) {
            analogWrite(A_1B, 0);
            analogWrite(A_1A, 0);
            analogWrite(B_1B, 0);
            analogWrite(B_1A, speed);
        }

* `&& <https://www.arduino.cc/reference/en/language/structure/boolean-operators/logicaland/>`_: ET logique donne un r√©sultat vrai uniquement si les deux op√©randes sont vrais.

* `! <https://www.arduino.cc/reference/en/language/structure/boolean-operators/logicalnot/>`_: NON logique donne un r√©sultat vrai si l'op√©rande est faux, et vice versa.
