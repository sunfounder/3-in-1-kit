.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _car_ir_obstacle:

5. Jouer avec le module d'√©vitement d'obstacles
=================================================

Deux modules infrarouges d'√©vitement d'obstacles sont install√©s √† l'avant de la voiture, ils permettent de d√©tecter certains obstacles proches.

Dans ce projet, la voiture se d√©place librement vers l'avant et, lorsqu'elle rencontre un obstacle, elle est capable de l'√©viter et de continuer √† se d√©placer dans d'autres directions.

**Composants requis**

Pour ce projet, nous avons besoin des composants suivants.

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - 3 in 1 Starter Kit
        - 380+
        - |link_3IN1_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_uno`
        - |link_Uno_R3_buy|
    *   - :ref:`cpn_l9110`
        - \-
    *   - :ref:`cpn_tt_motor`
        - \-
    *   - :ref:`cpn_avoid` 
        - |link_obstacle_avoidance_buy|

**C√¢blage**

Le module d'√©vitement d'obstacle est un capteur de proximit√© infrarouge √† distance r√©glable dont la sortie est normalement haute et basse lorsqu'un obstacle est d√©tect√©.

.. raw:: html

    <iframe width="600" height="400" src="https://www.youtube.com/embed/vadNtXwITFc?si=gY4Ww31zmcs8AObP" title="Lecteur vid√©o YouTube" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Construisez maintenant le circuit selon le sch√©ma ci-dessous.

.. list-table:: 
    :header-rows: 1

    * - Module IR gauche
      - Carte R3
    * - OUT
      - 8
    * - GND
      - GND
    * - VCC
      - 5V

.. list-table:: 
    :header-rows: 1

    * - Module IR droit
      - Carte R3
    * - OUT
      - 7
    * - GND
      - GND
    * - VCC
      - 5V

.. image:: img/car_5.png
    :width: 800


**Ajuster le module**

.. raw:: html

    <video width="600" loop autoplay muted>
        <source src="_static/video/calibrate_ir.mp4" type="video/mp4">
        Votre navigateur ne prend pas en charge la balise vid√©o.
    </video>
    
Avant de commencer le projet, vous devez r√©gler la distance de d√©tection du module.

C√¢blez selon le sch√©ma ci-dessus, alimentez la carte R3 (soit en branchant directement le c√¢ble USB, soit en connectant le c√¢ble de la batterie 9V), sans t√©l√©charger le code.

Placez un carnet ou tout autre objet plat √† environ 5 cm devant le module d'√©vitement d'obstacle IR.

Utilisez ensuite un tournevis pour tourner le potentiom√®tre sur le module jusqu'√† ce que l'indicateur de signal sur le module s'allume, afin d'ajuster sa distance maximale de d√©tection √† 5 cm.

Suivez la m√™me m√©thode pour r√©gler l'autre module infrarouge.

.. image:: img/ir_obs_cali.jpg



**Code**

.. note::

    * Ouvrez le fichier ``5.obstacle_avoidance_module.ino`` situ√© dans le dossier ``3in1-kit\car_project\5.obstacle_avoidance_module``.
    * Ou copiez ce code dans **Arduino IDE**.
    
    * Ou t√©l√©chargez le code via `Arduino Web Editor <https://docs.arduino.cc/cloud/web-editor/tutorials/getting-started/getting-started-web-editor>`_.

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/289ca80d-009f-4f60-b36d-1da6c5e10233/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

La voiture avancera une fois le code t√©l√©charg√© avec succ√®s. Lorsque le module infrarouge gauche d√©tecte un obstacle, elle reculera vers la gauche ; lorsque le module infrarouge droit d√©tecte un obstacle, elle reculera vers la droite ; si les deux c√¥t√©s d√©tectent un obstacle, elle reculera directement en arri√®re.

**Comment √ßa fonctionne ?**

Ce projet se base sur la valeur des modules d'√©vitement d'obstacles infrarouges gauche et droit pour faire prendre √† la voiture l'action appropri√©e.

#. Ajoutez la d√©finition de pin pour les 2 modules d'√©vitement d'obstacles, ici ils sont r√©gl√©s sur ``INPUT``.

    .. code-block:: arduino

        ...
        const int rightIR = 7;
        const int leftIR = 8;

        void setup() {
        ...

        //IR obstacle
            pinMode(leftIR, INPUT);
            pinMode(rightIR, INPUT);
        }


#. Lisez les valeurs des modules infrarouges gauche et droit et laissez la voiture prendre l'action correspondante.

    .. code-block:: arduino

        void loop() {

            int left = digitalRead(leftIR);   // 0: Obstructed  1: Empty
            int right = digitalRead(rightIR);
            int speed = 150;

            if (!left && right) {
                backLeft(speed);
            } else if (left && !right) {
                backRight(speed);
            } else if (!left && !right) {
                moveBackward(speed);
            } else {
                moveForward(speed);
            }
        }

    * Si le module IR gauche est √† 0 (obstacle d√©tect√©) et le module IR droit est √† 1, laissez la voiture reculer √† gauche.
    * Si le module IR droit est √† 0 (obstacle d√©tect√©), laissez la voiture reculer √† droite.
    * Si les 2 modules IR d√©tectent l'obstacle en m√™me temps, la voiture reculera.
    * Sinon, la voiture continuera √† avancer.


#. √Ä propos de la fonction ``backLeft()``.

    Lorsque le moteur droit tourne dans le sens antihoraire et que le moteur gauche ne tourne pas, la voiture reculera vers la gauche. 

    .. code-block:: arduino

        void backLeft(int speed) {
            analogWrite(A_1B, speed);
            analogWrite(A_1A, 0);
            analogWrite(B_1B, 0);
            analogWrite(B_1A, 0);
        }

#. √Ä propos de la fonction ``backRight()``.

    Lorsque le moteur gauche tourne dans le sens horaire et que le moteur droit ne tourne pas, la voiture reculera vers la droite.

    .. code-block:: arduino

        void backRight(int speed) {
            analogWrite(A_1B, 0);
            analogWrite(A_1A, 0);
            analogWrite(B_1B, 0);
            analogWrite(B_1A, speed);
        }

* `&& <https://www.arduino.cc/reference/en/language/structure/boolean-operators/logicaland/>`_ : L'op√©rateur logique ET donne un r√©sultat vrai seulement si les deux op√©randes sont vrais.

* `! <https://www.arduino.cc/reference/en/language/structure/boolean-operators/logicalnot/>`_ : L'op√©rateur logique NON donne un r√©sultat vrai si l'op√©rande est faux et vice versa.

