.. note::

    ¬°Hola, bienvenido a la Comunidad de Aficionados a Raspberry Pi, Arduino y ESP32 de SunFounder en Facebook! Profundiza en Raspberry Pi, Arduino y ESP32 con otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte de expertos**: Resuelve problemas posventa y desaf√≠os t√©cnicos con ayuda de nuestra comunidad y equipo.
    - **Aprender y compartir**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Vistas previas exclusivas**: Obt√©n acceso anticipado a anuncios de nuevos productos y avances.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s nuevos.
    - **Promociones festivas y sorteos**: Participa en sorteos y promociones de fiestas.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy!

.. _car_remote:

9. Control Remoto
=====================

Este kit viene con un receptor IR, que te permite usar un control remoto IR para controlar el movimiento del coche.

**Componentes Necesarios**

Para este proyecto, necesitamos los siguientes componentes.

Es definitivamente conveniente comprar un kit completo, aqu√≠ tienes el enlace:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre	
        - ELEMENTOS DE ESTE KIT
        - ENLACE
    *   - 3 in 1 Starter Kit
        - 380+
        - |link_3IN1_kit|

Tambi√©n puedes comprarlos por separado en los siguientes enlaces.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCCI√ìN DEL COMPONENTE
        - ENLACE DE COMPRA

    *   - :ref:`cpn_uno`
        - |link_Uno_R3_buy|
    *   - :ref:`cpn_l9110`
        - \-
    *   - :ref:`cpn_tt_motor`
        - \-
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_receiver`
        - \-

**Cableado**

.. raw:: html

    <iframe width="600" height="400" src="https://www.youtube.com/embed/M8buGWCkYcI?si=spLK2KP363rkN6sl" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Ahora construye el circuito de acuerdo con el diagrama a continuaci√≥n.

.. list-table:: 
    :header-rows: 1

    * - Receptor IR
      - Placa R3
    * - OUT
      - 12
    * - GND
      - GND
    * - VCC
      - 5V

.. image:: img/car_9.png
    :width: 800

**C√≥digo**

.. note::

    * Abre el archivo ``9.remote_control.ino`` en la ruta ``3in1-kit\car_project\9.remote_control``.
    * O copia este c√≥digo en el **Arduino IDE**.
    * Aqu√≠ se utiliza la biblioteca ``IRremote``, puedes instalarla desde el **Library Manager**.
  
        .. image:: ../img/lib_irremote.png

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/7c78450d-fcd2-4288-a00d-499c71ad2d52/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


Una vez subido el c√≥digo con √©xito, al presionar un bot√≥n en el control remoto, el LED parpadear√° una vez para indicar que la se√±al ha sido recibida, y el coche se mover√° de acuerdo al bot√≥n que hayas presionado. Puedes presionar las siguientes teclas para controlar el coche.

* **+**: Acelerar
* **-**: Desacelerar
* **1**: Hacia adelante a la izquierda
* **2**: Hacia adelante
* **3**: Hacia adelante a la derecha
* **4**: Girar a la izquierda
* **6**: Girar a la derecha
* **7**: Hacia atr√°s a la izquierda
* **8**: Hacia atr√°s
* **9**: Hacia atr√°s a la derecha

**¬øC√≥mo funciona?**

El efecto de este proyecto es hacer que el coche se mueva leyendo el valor de la tecla del control remoto IR. Adem√°s, el LED en el pin 13 parpadear√° para indicar la recepci√≥n exitosa de la se√±al IR.

1. Importa la biblioteca ``IRremote``, puedes instalarla desde el **Library Manager**.

    .. code-block:: arduino

        #include <IRremote.h>

        const int IR_RECEIVE_PIN = 12;  // Define el n√∫mero de pin para el Sensor IR

2. Inicializa la comunicaci√≥n serial a una tasa de baudios de 9600. Inicializa el receptor IR en el pin especificado (``IR_RECEIVE_PIN``) y habilita la retroalimentaci√≥n LED (si es aplicable).

    .. code-block:: arduino

        ...

        void setup() {

            ...
            //IR remote
            IrReceiver.begin(IR_RECEIVE_PIN, ENABLE_LED_FEEDBACK);  // Start the receiver
            Serial.println("REMOTE CONTROL START");

        }

3. Cuando presiones las teclas en el control remoto, el receptor infrarrojo sabr√° qu√© tecla se ha presionado y luego el coche se mover√° de acuerdo al valor de la tecla correspondiente.

    .. code-block:: arduino

        void loop() {

            if (IrReceiver.decode()) {
                //    Serial.println(results.value,HEX);
                String key = decodeKeyValue(IrReceiver.decodedIRData.command);
                if (key != "ERROR") {
                    Serial.println(key);

                    if (key == "+") {
                        speed += 50;
                    } else if (key == "-") {
                        speed -= 50;
                    } else if (key == "2") {
                        moveForward(speed);
                        delay(1000);
                    ...
                    }
                    IrReceiver.resume();  // Enable receiving of the next value
                    
            }
        }

    * Verifica si se recibe y descodifica exitosamente una se√±al IR.
    * Descodifica el comando IR y lo almacena en ``key`` usando una funci√≥n personalizada ``decodeKeyValue()``.
    * Comprueba si el valor descodificado no es un error.
    * Imprime el valor IR descodificado en el monitor serial.
    * Reanuda la recepci√≥n de se√±al IR para la siguiente se√±al.
