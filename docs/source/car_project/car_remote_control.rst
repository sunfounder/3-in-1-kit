.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _car_remote:

9. Fernbedienung
=================================

Dieses Kit wird mit einem IR-Empf√§nger geliefert, mit dem Sie ein Auto mithilfe einer IR-Fernbedienung steuern k√∂nnen.

**Ben√∂tigte Komponenten**

F√ºr dieses Projekt ben√∂tigen wir die folgenden Komponenten.

Es ist sicherlich praktisch, ein komplettes Kit zu kaufen. Hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name	
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - 3-in-1 Starter Kit
        - 380+
        - |link_3IN1_kit|

Sie k√∂nnen sie auch separat √ºber die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENVORSTELLUNG
        - KAUF-LINK

    *   - :ref:`cpn_uno`
        - |link_Uno_R3_buy|
    *   - :ref:`cpn_l9110`
        - \-
    *   - :ref:`cpn_tt_motor`
        - \-
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_receiver`
        - \-

**Verdrahtung**

.. raw:: html

    <iframe width="600" height="400" src="https://www.youtube.com/embed/M8buGWCkYcI?si=spLK2KP363rkN6sl" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Bauen Sie jetzt den Schaltkreis gem√§√ü dem untenstehenden Diagramm.

.. list-table:: 
    :header-rows: 1

    * - IR-Empf√§nger
      - R3 Platine
    * - OUT
      - 12
    * - GND
      - GND
    * - VCC
      - 5V

.. list-table:: 
    :header-rows: 1

    * - LED
      - R3 Platine
    * - Anode (Der l√§ngere Pin)
      - 13
    * - Kathode
      - GND

.. image:: img/car_9.png
    :width: 800

**Code**

.. note::

    * √ñffnen Sie die Datei ``9.remote_control.ino`` im Pfad ``3in1-kit\car_project\9.remote_control``.
    * Oder kopieren Sie diesen Code in die **Arduino IDE**.
    * Hier wird die Bibliothek ``IRremote`` verwendet. Sie k√∂nnen sie √ºber den **Library Manager** installieren.
  
        .. image:: ../img/lib_irremote.png

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/7c78450d-fcd2-4288-a00d-499c71ad2d52/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

Nachdem der Code erfolgreich hochgeladen wurde, dr√ºcken Sie die Taste auf der Fernbedienung. Die LED blinkt einmal, um anzuzeigen, dass das Signal empfangen wurde, und das Auto bewegt sich entsprechend der gedr√ºckten Taste. Sie k√∂nnen die folgenden Tasten verwenden, um das Auto zu steuern.

* **+**: Beschleunigen
* **-**: Verlangsamen
* **1**: Vorw√§rts nach links
* **2**: Vorw√§rts
* **3**: Vorw√§rts nach rechts
* **4**: Links abbiegen
* **6**: Rechts abbiegen
* **7**: R√ºckw√§rts nach links
* **8**: R√ºckw√§rts
* **9**: R√ºckw√§rts nach rechts

**Wie funktioniert es?**

Das Ziel dieses Projekts ist es, das Auto durch Auslesen des Tastenwerts der IR-Fernbedienung zu bewegen. Zus√§tzlich wird die LED an Pin 13 blinken, um den erfolgreichen Empfang des IR-Signals anzuzeigen.

#. Importieren Sie die Bibliothek ``IRremote``. Sie k√∂nnen diese aus dem **Library Manager** installieren.

    .. code-block:: arduino

        #include <IRremote.h>

        const int IR_RECEIVE_PIN = 12;  // Define the pin number for the IR Sensor

#. Initialisiert die serielle Kommunikation mit einer Baudrate von 9600. Initialisiert den IR-Empf√§nger am angegebenen Pin (``IR_RECEIVE_PIN``) und aktiviert die LED-R√ºckmeldung (falls zutreffend).


    .. code-block:: arduino

        ...

        void setup() {

            ...
            //IR remote
            IrReceiver.begin(IR_RECEIVE_PIN, ENABLE_LED_FEEDBACK);  // Start the receiver
            Serial.println("REMOTE CONTROL START");
        }

#. Wenn Sie die Tasten auf der Fernbedienung dr√ºcken, der Infrarotempf√§nger erkennt, welche Taste gedr√ºckt wurde. Anschlie√üend bewegt sich das Auto entsprechend dem zugeh√∂rigen Tastenwert.

    .. code-block:: arduino

        void loop() {

            if (IrReceiver.decode()) {
                //    Serial.println(results.value,HEX);
                String key = decodeKeyValue(IrReceiver.decodedIRData.command);
                if (key != "ERROR") {
                    Serial.println(key);


                    if (key == "+") {
                        speed += 50;
                    } else if (key == "-") {
                        speed -= 50;
                    } else if (key == "2") {
                        moveForward(speed);
                        delay(1000);
                    ...
                    }
                    IrReceiver.resume();  // Enable receiving of the next value

            }
        }

    * √úberpr√ºft, ob ein IR-Signal empfangen und erfolgreich decodiert wurde.
    * Decodiert den IR-Befehl und speichert ihn in ``key`` mit einer benutzerdefinierten Funktion ``decodeKeyValue()``.
    * √úberpr√ºft, ob der decodierte Wert kein Fehler ist.
    * Gibt den decodierten IR-Wert auf dem seriellen Monitor aus.
    * Setzt den IR-Signalempfang f√ºr das n√§chste Signal fort.

