.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et des promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _car_remote:

9. T√©l√©commande
==========================

Ce kit est √©quip√© d'un r√©cepteur IR, qui vous permet d'utiliser une t√©l√©commande infrarouge pour contr√¥ler les mouvements de la voiture.

**Composants n√©cessaires**

Dans ce projet, nous aurons besoin des composants suivants.

Il est pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - √âl√©ments dans ce kit
        - Lien
    *   - Kit de d√©marrage 3 en 1
        - 380+
        - |link_3IN1_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - Pr√©sentation des composants
        - Lien d'achat

    *   - :ref:`cpn_uno`
        - |link_Uno_R3_buy|
    *   - :ref:`cpn_l9110`
        - \-
    *   - :ref:`cpn_tt_motor`
        - \-
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_receiver`
        - \-

**C√¢blage**

Assemblez le circuit selon le sch√©ma ci-dessous.

.. list-table::
    :header-rows: 1

    * - R√©cepteur IR
      - Carte R4
    * - OUT
      - 12
    * - GND
      - GND
    * - VCC
      - 5V

.. list-table::
    :header-rows: 1

    * - LED
      - Carte R4
    * - Anode (la broche la plus longue)
      - 13
    * - Cathode
      - GND

.. image:: img/car_9.png
    :width: 800

**Code**

.. note::

    * Ouvrez le fichier ``9.remote_control.ino`` dans le r√©pertoire ``3in1-kit\car_project\9.remote_control``.
    * Ou copiez ce code dans **Arduino IDE**.
    * La biblioth√®que ``IRremote`` est utilis√©e ici, vous pouvez l'installer depuis le **Gestionnaire de biblioth√®ques**.

        .. image:: ../img/lib_irremote.png

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/7c78450d-fcd2-4288-a00d-499c71ad2d52/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

Apr√®s avoir t√©l√©vers√© le code avec succ√®s, appuyez sur un bouton de la t√©l√©commande. La LED clignotera une fois pour indiquer que le signal a √©t√© re√ßu, et la voiture se d√©placera selon le bouton que vous avez press√©. Vous pouvez utiliser les touches suivantes pour contr√¥ler la voiture :

* **+** : Acc√©l√©rer
* **-** : D√©c√©l√©rer
* **1** : Avancer vers la gauche
* **2** : Avancer
* **3** : Avancer vers la droite
* **4** : Tourner √† gauche
* **6** : Tourner √† droite
* **7** : Reculer vers la gauche
* **8** : Reculer
* **9** : Reculer vers la droite

**Comment √ßa fonctionne ?**

L'effet de ce projet est de faire bouger la voiture en lisant la valeur des touches de la t√©l√©commande IR. De plus, une LED est ajout√©e pour indiquer que le signal IR a √©t√© re√ßu avec succ√®s.

#. Importez la biblioth√®que ``IRremote``. Installez-la via le **Gestionnaire de biblioth√®ques**.

    .. code-block:: arduino

        #include <IRremote.h>

        const int IR_RECEIVE_PIN = 12;  // D√©finir le num√©ro de broche pour le capteur IR

#. Initialisez la communication s√©rie avec un d√©bit en bauds de 9600. Activez le r√©cepteur IR sur la broche sp√©cifi√©e (``IR_RECEIVE_PIN``) et activez le retour LED (si applicable).

    .. code-block:: arduino

        ...

        void setup() {

            ...
            // T√©l√©commande IR
            IrReceiver.begin(IR_RECEIVE_PIN, ENABLE_LED_FEEDBACK);  // D√©marrer le r√©cepteur IR
            Serial.println("REMOTE CONTROL START");

        }


#. Lorsque vous appuyez sur les touches de la t√©l√©commande, le r√©cepteur infrarouge identifie la touche appuy√©e, et la voiture agit en fonction de la valeur correspondante.

    .. code-block:: arduino

        void loop() {

            if (IrReceiver.decode()) {
                //    Serial.println(results.value,HEX);
                String key = decodeKeyValue(IrReceiver.decodedIRData.command);
                if (key != "ERROR") {
                    Serial.println(key);

                    if (key == "+") {
                        speed += 50;
                    } else if (key == "-") {
                        speed -= 50;
                    } else if (key == "2") {
                        moveForward(speed);
                        delay(1000);
                    ...
                    }
                    IrReceiver.resume();  // R√©activer la r√©ception pour la prochaine commande
            }
        }

    * V√©rifie si un signal IR est re√ßu et d√©cod√© avec succ√®s.
    * D√©code la commande IR et la stocke dans ``key`` en utilisant une fonction personnalis√©e ``decodeKeyValue()``.
    * V√©rifie si la valeur d√©cod√©e n'est pas une erreur.
    * Affiche la valeur IR d√©cod√©e sur le moniteur s√©rie.
    * R√©active la r√©ception du signal IR pour le prochain signal.

