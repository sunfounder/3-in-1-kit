.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook‚ÄØ! Explorez en profondeur Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Assistance d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions et concours festifs** : Participez √† des concours et des promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous‚ÄØ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui‚ÄØ!

.. _ar_digital_read:

3. Lecture Num√©rique
========================

Les capteurs capturent des informations du monde r√©el, qui sont ensuite communiqu√©es √† la carte principale via des broches (certaines num√©riques, d'autres analogiques) pour que l'ordinateur puisse conna√Ætre l'√©tat r√©el de la situation.

Ainsi, la carte Arduino peut conna√Ætre l'√©tat de fonctionnement des capteurs num√©riques en lisant la valeur des broches num√©riques, comme les boutons ou le module d'√©vitement d'obstacles IR.


Voici les fonctions n√©cessaires.

* ``pinMode(pin, mode)`` : Configurez la broche sp√©cifique comme ``INPUT`` ou ``OUTPUT`` ; ici, elle doit √™tre d√©finie comme ``INPUT``.

   **Syntaxe**
      pinMode(pin, mode)

   **Param√®tres**
    * ``pin`` : le num√©ro de la broche Arduino √† configurer.
    * ``mode`` : INPUT, OUTPUT ou INPUT_PULLUP.


* ``digitalRead(pin)`` : Lit la valeur (√©tat du niveau) de la broche num√©rique sp√©cifi√©e.

   **Syntaxe**
      digitalRead(pin)

   **Param√®tres**
    * ``pin`` : le num√©ro de la broche Arduino √† lire.

   **Retourne**
      HIGH ou LOW.


**Exemple de Lecture Num√©rique**

.. code-block:: arduino

   int ledPin = 13;  // LED connect√©e √† la broche num√©rique 13
   int inPin = 7;    // bouton poussoir connect√© √† la broche num√©rique 7
   int val = 0;      // variable pour stocker la valeur lue

   void setup() {
      pinMode(ledPin, OUTPUT);  // configure la broche num√©rique 13 comme sortie
      pinMode(inPin, INPUT);    // configure la broche num√©rique 7 comme entr√©e
   }

   void loop() {
      val = digitalRead(inPin);   // lit la broche d'entr√©e
      digitalWrite(ledPin, val);  // ajuste la LED selon la valeur du bouton
   }


**Notes et Avertissements**

1. R√©sistances Pull-Up & Pull-Down.

    ``digitalRead()`` peut produire des valeurs al√©atoires ou ind√©termin√©es si la broche ne re√ßoit pas de signal de niveau. Diriger les broches d'entr√©e vers un √©tat connu peut rendre le projet plus fiable. 
    Lors de l'utilisation d'un composant d'entr√©e tel qu'un bouton, il est g√©n√©ralement n√©cessaire de connecter une r√©sistance pull-up ou pull-down en parall√®le avec la broche d'entr√©e num√©rique.

    En plus de connecter une r√©sistance pull-up, vous pouvez √©galement d√©finir le mode de la broche sur ``INPUT_PULLUP`` dans le code, par exemple ``pinMode(pin, INPUT_PULLUP)``. Dans ce cas, la broche acc√®de √† la r√©sistance pull-up int√©gr√©e de l'Atmega via le logiciel, ce qui a le m√™me effet que de connecter une r√©sistance pull-up.

2. √Ä propos de la broche 13.

    Toutes les broches num√©riques (1-13) de la carte R4 peuvent √™tre utilis√©es avec ``digitalRead()``.
    Cependant, la broche num√©rique 13 est plus difficile √† utiliser comme entr√©e num√©rique que les autres broches num√©riques. Cela est d√ª au fait qu'elle est connect√©e √† une LED et √† une r√©sistance sur la carte.
    Si vous activez sa r√©sistance pull-up interne de 20k, elle restera √† environ 1,7V au lieu des 5V attendus, car la LED embarqu√©e et la r√©sistance en s√©rie abaissent le niveau de tension, ce qui signifie qu'elle renvoie toujours LOW. Si vous devez utiliser la broche 13 comme entr√©e num√©rique, configurez son ``pinMode()`` sur INPUT et utilisez une r√©sistance pull-down externe.

3. Broches Analogiques.

    Si les broches num√©riques ne suffisent pas, les broches analogiques (A0-A5) peuvent √©galement √™tre utilis√©es comme broches num√©riques. 
    Elles doivent √™tre configur√©es sur INPUT avec ``pinMode(pin, mode)``.


**Composants Associ√©s**

Vous trouverez ci-dessous les composants associ√©s. Cliquez pour apprendre √† les utiliser.

.. toctree::
    :maxdepth: 2

    ar_serial_monitor
    ar_button
    ar_reed
    ar_detect_the_obstacle
    ar_detect_the_line


