.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _ar_digital_read:

3. Lecture Num√©rique
=======================

Les capteurs capturent les informations du monde r√©el, qui sont ensuite communiqu√©es √† la carte principale via des broches (certaines num√©riques, d'autres analogiques) afin que l'ordinateur puisse conna√Ætre la r√©alit√© de la situation.

Ainsi, la carte Arduino peut conna√Ætre l'√©tat de fonctionnement des capteurs num√©riques en lisant la valeur des broches num√©riques comme les boutons, le module d'√©vitement d'obstacle IR.


Voici les fonctions requises.

* ``pinMode(pin, mode)`` : Configure la broche sp√©cifique comme ``INPUT`` (entr√©e) ou ``OUTPUT`` (sortie), ici elle doit √™tre r√©gl√©e sur ``INPUT``.

   **Syntaxe**
      pinMode(pin, mode)

   **Param√®tres**
    * ``pin`` : le num√©ro de broche Arduino √† configurer.
    * ``mode`` : INPUT, OUTPUT, ou INPUT_PULLUP.



* ``digitalRead(pin)`` : Lit la valeur (√©tat de niveau) de la broche num√©rique sp√©cifi√©e.

   **Syntaxe**
      digitalRead(pin)

   **Param√®tres**
    * ``pin`` : le num√©ro de broche Arduino que vous souhaitez lire

   **Retours**
      HIGH ou LOW


**Exemple de Lecture Num√©rique**

.. code-block:: arduino

   int ledPin = 13;  // LED connected to digital pin 13
   int inPin = 7;    // pushbutton connected to digital pin 7
   int val = 0;      // variable to store the read value

   void setup() {
      pinMode(ledPin, OUTPUT);  // sets the digital pin 13 as output
      pinMode(inPin, INPUT);    // sets the digital pin 7 as input
   }

   void loop() {
      val = digitalRead(inPin);   // read the input pin
      digitalWrite(ledPin, val);  // sets the LED to the button's value
   }


**Notes et Avertissements**

1. Pull Up & Pull Down.

    ``digitalRead()`` peut produire des valeurs al√©atoires et ind√©termin√©es si la broche ne re√ßoit pas un signal de niveau. Ainsi, diriger les broches d'entr√©e vers un √©tat connu peut rendre le projet plus fiable.
    Lors de l'utilisation d'un composant d'entr√©e tel qu'un bouton, il est g√©n√©ralement n√©cessaire de connecter une r√©sistance de pull-up ou pull-down en parall√®le √† la broche d'entr√©e num√©rique.

    Outre la connexion d'une r√©sistance de pull-up, vous pouvez √©galement r√©gler le mode de la broche sur ``INPUT_PULLUP`` dans le code, par exemple ``pinMode(pin,INPUT_PULLUP)``. Dans ce cas, la broche acc√©dera √† la r√©sistance de pull-up int√©gr√©e de l'Atmega via le logiciel, et cela aura le m√™me effet que la connexion d'une r√©sistance de pull-up.

2. √Ä propos de la Pin13.

    Toutes les broches num√©riques (1-13) sur la carte R3 peuvent √™tre utilis√©es comme ``digitalRead()``.
    Cependant, la broche num√©rique 13 est plus difficile √† utiliser comme entr√©e num√©rique que les autres broches num√©riques.
    Car elle connecte une LED et une r√©sistance, elle est soud√©e sur la plupart des cartes.
    Si vous activez sa r√©sistance de pull-up interne de 20k, elle se maintiendra autour de 1,7V au lieu des 5V attendus car la LED embarqu√©e et la r√©sistance en s√©rie tirent le niveau de tension vers le bas, ce qui signifie qu'elle retourne toujours LOW. Si vous devez utiliser la pin 13 comme une entr√©e num√©rique, r√©glez son ``pinMode()`` sur INPUT et utilisez une r√©sistance de pull-down externe.

3. Broches analogiques.

    Si les broches num√©riques ne sont pas suffisantes, les broches analogiques (A0-A5) peuvent √©galement √™tre utilis√©es comme broches num√©riques.
    Il faut les r√©gler sur INPUT avec ``pinMode(pin,mode)``.


**Composants Associ√©s**

Ci-dessous les composants associ√©s, vous pouvez cliquer pour apprendre √† les utiliser.

.. toctree::
    :maxdepth: 2

    ar_serial_monitor
    ar_button
    ar_reed
    ar_detect_the_obstacle
    ar_detect_the_line



