.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

6.1 Tableau Sensible √† la Lumi√®re
=================================

Un photo-r√©sistor ou une cellule photo√©lectrique est une r√©sistance variable contr√¥l√©e par la lumi√®re. La r√©sistance d'un photo-r√©sistor diminue avec l'augmentation de l'intensit√© lumineuse incidente ; en d'autres termes, il pr√©sente une photoconductivit√©. Un photo-r√©sistor peut √™tre appliqu√© dans des circuits d√©tecteurs sensibles √† la lumi√®re, et dans des circuits de commutation activ√©s par la lumi√®re et l'obscurit√©.

La r√©sistance d'un photo-r√©sistor change avec l'intensit√© lumineuse incidente. Si l'intensit√© lumineuse augmente, la r√©sistance diminue ; si elle diminue, la r√©sistance augmente.
Dans cette exp√©rience, nous utiliserons huit LEDs pour montrer l'intensit√© lumineuse. Plus l'intensit√© lumineuse est √©lev√©e, plus de LEDs s'allumeront. Lorsque l'intensit√© lumineuse est suffisamment √©lev√©e, toutes les LEDs seront allum√©es. Lorsqu'il n'y a pas de lumi√®re, toutes les LEDs s'√©teindront.


**Composants requis**

Pour ce projet, nous aurons besoin des composants suivants.

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - √âL√âMENTS DE CE KIT
        - LIEN
    *   - 3 in 1 Starter Kit
        - 380+
        - |link_3IN1_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_uno`
        - |link_Uno_R3_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_photoresistor`
        - |link_photoresistor_buy|

**Sch√©ma**

.. image:: img/circuit_6.1_light_led.png

**C√¢blage**

.. image:: img/light_control_led.png
    :width: 800
    :align: center


**Code**

.. note::

    * Ouvrez le fichier ``6.1.light_control_led.ino`` situ√© dans le dossier ``3in1-kit\basic_project\6.1.light_control_led``.
    * Ou copiez ce code dans **Arduino IDE**.
    
    * Ou t√©l√©versez le code via l'`√âditeur Web Arduino <https://docs.arduino.cc/cloud/web-editor/tutorials/getting-started/getting-started-web-editor>`_.

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/859e1688-5801-400e-9409-f844ca9b7da7/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>
    
Maintenant, √©clairez le photo-r√©sistor, et vous verrez plusieurs LEDs s'allumer. √âclairez davantage et vous verrez plus de LEDs s'allumer. Quand vous le placez dans un environnement sombre, toutes les LEDs s'√©teindront.

**Comment √ßa fonctionne ?**


.. code-block:: arduino

    void loop() 
    {
        sensorValue = analogRead(photocellPin); //read the value of A0
        ledLevel = map(sensorValue, 300, 1023, 0, NbrLEDs); // map to the number of LEDs
        for (int led = 0; led < NbrLEDs; led++)//
        {
            if (led < ledLevel ) //When led is smaller than ledLevel, run the following code. 
            {
                digitalWrite(ledPins[led], HIGH); // turn on pins less than the level
            }
            else 
            {
                digitalWrite(ledPins[led],LOW); // turn off pins higher than 
            }
        }
    }

En utilisant la fonction ``map()``, vous pouvez mapper la valeur du photo-r√©sistor aux 8 LEDs, par exemple, si sensorValue est 560, alors ledLevel est 4, donc √† ce moment, ledPins[0] √† ledPins[4] devraient √™tre allum√©s, et ledPins[5] √† ledPins[7] devraient √™tre √©teints.

