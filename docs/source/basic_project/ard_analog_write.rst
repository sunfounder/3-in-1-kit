.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _ar_analog_write:

2. Analog schreiben
======================

6 der 14 digitalen Pins des Arduino verf√ºgen auch √ºber eine PWM-Ausgangsfunktion. Daher k√∂nnen Sie diesen 6 Pins neben digitalen Signalen auch analoge Signale (PWM-Wellensignale) schreiben. Auf diese Weise k√∂nnen Sie die LEDs in unterschiedlichen Helligkeiten leuchten lassen oder den Motor mit unterschiedlichen Geschwindigkeiten drehen lassen.

Pulsweitenmodulation oder `PWM <https://docs.arduino.cc/learn/microcontrollers/analog-output>`_ ist eine Technik, um analoge Ergebnisse mit digitalen Mitteln zu erzielen. Da der buchst√§bliche Sinn vielleicht schwer zu erfassen ist, folgt ein Beispiel zur Steuerung der Intensit√§t einer LED, um das Konzept besser zu veranschaulichen.

Ein digitales Signal, das aus hohen und niedrigen Pegeln besteht, wird als Puls bezeichnet. Die Pulsbreite dieser Pins kann durch √Ñnderung der EIN/AUS-Geschwindigkeit angepasst werden. 
Vereinfacht ausgedr√ºckt: Wenn wir die LED kurz ein- und ausschalten (z.B. 20ms, die visuelle Verweilzeit der meisten Menschen), werden wir nicht bemerken, dass sie ausgegangen ist, aber die Helligkeit des Lichts wird etwas schw√§cher sein. W√§hrend dieser Zeit, je l√§nger die LED eingeschaltet ist, desto heller wird sie sein.
Das bedeutet, innerhalb einer Periode, je breiter der Puls, desto gr√∂√üer die "elektrische Signalst√§rke", die vom Mikrocontroller ausgegeben wird.

Dies ist die Funktion, die ben√∂tigt wird, um die PWM-Welle zu schreiben.

* ``analogWrite(pin, value)``

    Schreibt einen analogen Wert (PWM-Welle) auf einen Pin. Unterschiedliche Ausgangsspannungen (0-5V) k√∂nnen durch Erzeugung eines bestimmten Pulssignals simuliert werden. Der Pin beh√§lt dieses Signal bei, bis er durch eine neue Lese- oder Schreibanweisung aufgerufen wird.

   **Syntax**
      analogWrite(pin, value)

   **Parameters**
    * ``pin``: Der Arduino-Pin, auf den geschrieben werden soll. Erlaubte Datentypen: int.
    * ``value``: Der Tastgrad: zwischen 0 (immer aus) und 255 (immer an). Erlaubte Datentypen: int.

**Beispiel f√ºr Analog schreiben**

.. code-block:: arduino

   int pin = 9;      //connect  to pwm pin

   void setup() {
      pinMode(pin, OUTPUT);  // sets the pin as output
   }

   void loop() {
      for (int i = 0 ;i<255 ; i++){
         analogWrite(pin, i); //analogWrite values from 0 to 255
         delay(30);
      }
   }

**Hinweise und Warnungen**

* Wenn Sie genau auf das R4-Board schauen, werden Sie feststellen, dass die Pins mit dem "~"-Symbol √ºber eine analoge Ausgangsfunktion verf√ºgen.
* Die auf den Pins 5 und 6 erzeugten PWM-Ausg√§nge werden h√∂here als erwartete Tastverh√§ltnisse aufweisen. Dies liegt an Wechselwirkungen mit den Funktionen ``millis()`` und ``delay()``, die denselben internen Timer verwenden, der zur Erzeugung dieser PWM-Ausg√§nge verwendet wird. Dies wird vor allem bei niedrigen Tastverh√§ltniseinstellungen (z.B. 0 - 10) bemerkt und kann dazu f√ºhren, dass ein Wert von 0 den Ausgang auf den Pins 5 und 6 nicht vollst√§ndig ausschaltet.

**Verwandte Komponenten**

Unten sind die verwandten Komponenten aufgef√ºhrt. Sie k√∂nnen darauf klicken, um zu erfahren, wie sie verwendet werden.


.. toctree::
   :maxdepth: 2

   ar_fading
   ar_colorful_light