.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _ar_analog_write:

2. Analoges Schreiben
=========================

6 der 14 digitalen Pins von Arduino verf√ºgen auch √ºber eine PWM-Ausgabefunktion. Daher k√∂nnen Sie neben dem Schreiben von digitalen Signalen an diese 6 Pins auch analoge Signale (PWM-Wellensignale) an sie senden. Auf diese Weise k√∂nnen Sie die LEDs in unterschiedlicher Helligkeit leuchten lassen oder den Motor mit unterschiedlichen Geschwindigkeiten drehen lassen.

Pulsweitenmodulation, oder `PWM <https://docs.arduino.cc/learn/microcontrollers/analog-output>`_, ist eine Technik, um analoge Ergebnisse mit digitalen Mitteln zu erzielen. Da die w√∂rtliche Bedeutung schwer zu fassen sein mag, folgt hier ein Beispiel zur Steuerung der Intensit√§t einer LED, um das Prinzip besser zu veranschaulichen.

Ein digitales Signal, das aus hohen und niedrigen Pegeln besteht, wird als Puls bezeichnet. Die Pulsbreite dieser Pins kann durch √Ñnderung der EIN/AUS-Geschwindigkeit angepasst werden. Vereinfacht ausgedr√ºckt: Wenn wir die LED f√ºr eine kurze Zeit (wie 20ms, die visuelle Verweildauer der meisten Menschen) ein-, aus- und wieder einschalten, werden wir nicht bemerken, dass sie ausgeschaltet war, aber die Helligkeit des Lichts wird etwas schw√§cher sein. In diesem Zeitraum gilt: Je l√§nger die LED eingeschaltet ist, desto heller wird sie sein.
Das hei√üt, innerhalb eines Zeitraums, je breiter der Puls, desto gr√∂√üer ist die "elektrische Signalst√§rke", die vom Mikrocontroller ausgegeben wird.

Dies ist die ben√∂tigte Funktion, um die PWM-Welle zu schreiben:

* ``analogWrite(pin, value)``

    Schreibt einen analogen Wert (PWM-Welle) an einen Pin. Durch Generieren eines bestimmten Pulssignals k√∂nnen unterschiedliche Ausgangsspannungen (0-5V) simuliert werden. Der Pin beh√§lt dieses Signal bei, bis er durch eine neue Lese- oder Schreibanweisung aufgerufen wird.

   **Syntax**
      analogWrite(pin, value)

   **Parameter**
    * ``pin``: Der Arduino-Pin, an den geschrieben wird. Erlaubte Datentypen: int.
    * ``value``: Das Tastverh√§ltnis: zwischen 0 (immer aus) und 255 (immer an). Erlaubte Datentypen: int.

**Beispiel f√ºr Analoges Schreiben**

.. code-block:: arduino

   int pin = 9;      // Verbindung zum PWM-Pin

   void setup() {
      pinMode(pin, OUTPUT);  // Definiert den Pin als Ausgang
   }

   void loop() {
      for (int i = 0 ;i<255 ; i++){
         analogWrite(pin, i); //analogWrite Werte von 0 bis 255
         delay(30);
      }
   }

**Anmerkungen und Warnungen**

* Wenn Sie genau auf das R3-Board schauen, haben die mit dem Symbol "~" gekennzeichneten Pins eine analoge Ausgabefunktion.
* Die an den Pins 5 und 6 erzeugten PWM-Ausg√§nge haben h√∂here Tastverh√§ltnisse als erwartet. Dies liegt an Wechselwirkungen mit den Funktionen ``millis()`` und ``delay()``, die denselben internen Timer verwenden, der zum Erzeugen dieser PWM-Ausg√§nge genutzt wird. Dies wird vor allem bei niedrigen Tastverh√§ltniseinstellungen (z. B. 0 - 10) bemerkbar und kann dazu f√ºhren, dass ein Wert von 0 den Ausgang an den Pins 5 und 6 nicht vollst√§ndig abschaltet.

**Zugeh√∂rige Komponenten**

Im Folgenden finden Sie die zugeh√∂rigen Komponenten, auf die Sie klicken k√∂nnen, um zu erfahren, wie sie verwendet werden.


.. toctree::
   :maxdepth: 2

   ar_fading
   ar_colorful_light