.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _ar_calibration:

5.14 Calibration
================

Lorsque vous utilisez des composants d'entr√©e analogique, tels que des photor√©sistances, des capteurs d'humidit√© du sol, etc., vous pouvez constater que leur plage de lecture n'est pas de 0 √† 1023, mais plut√¥t une plage comme 0 √† 800 ou 600 √† 1000, car il est impossible d'atteindre les limites de ces dispositifs en utilisation normale.

Dans ce cas, une technique de calibration des entr√©es du capteur peut √™tre utilis√©e. Au d√©marrage, faites mesurer les lectures du capteur par la carte de contr√¥le pendant cinq secondes et enregistrez les lectures les plus hautes et les plus basses. Cette lecture de cinq secondes d√©finit les valeurs minimales et maximales attendues des lectures prises pendant le cycle.

Dans ce projet, nous utilisons une photor√©sistance et un buzzer passif pour impl√©menter un jeu semblable au `theremin <https://en.wikipedia.org/wiki/Theremin>`_ en utilisant la technique de calibration d√©crite ci-dessus.

.. note::
    Le `theremin <https://en.wikipedia.org/wiki/Theremin>`_ est un instrument de musique √©lectronique qui ne n√©cessite aucun contact physique. Il g√©n√®re diff√©rents tons en d√©tectant la position des mains du joueur.

**Composants requis**

Pour ce projet, nous aurons besoin des composants suivants.

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - √âL√âMENTS DE CE KIT
        - LIEN
    *   - 3 in 1 Starter Kit
        - 380+
        - |link_3IN1_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_uno`
        - |link_Uno_R3_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_buzzer`
        - |link_passive_buzzer_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_photoresistor`
        - |link_photoresistor_buy|

**Sch√©ma**

.. image:: img/circuit_8.8_calibration.png

**C√¢blage**

.. image:: img/calibration_bb.jpg
    :width: 600
    :align: center

**Code**

.. note::

    * Ouvrez le fichier ``5.14.calibration.ino`` situ√© dans le dossier ``3in1-kit\basic_project\5.14.calibration``.
    * Ou copiez ce code dans **Arduino IDE**.
    
    * Ou t√©l√©versez le code via l'`√âditeur Web Arduino <https://docs.arduino.cc/cloud/web-editor/tutorials/getting-started/getting-started-web-editor>`_.

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/9cbcaae0-3c9d-4e33-9957-548f92a9aab7/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


Apr√®s le t√©l√©versement r√©ussi du code, la LED s'allumera, et nous aurons 5 secondes pour calibrer la plage de d√©tection de la photor√©sistance. Cela est d√ª au fait que nous pouvons √™tre dans un environnement lumineux diff√©rent √† chaque utilisation (par exemple, l'intensit√© de la lumi√®re est diff√©rente entre midi et le cr√©puscule).

√Ä ce moment, nous devons balancer nos mains en haut et en bas sur la photor√©sistance, et la plage de mouvement de la main sera calibr√©e √† la plage de jeu de cet instrument.

Apr√®s 5 secondes, la LED s'√©teindra et nous pourrons agiter nos mains sur la photor√©sistance pour jouer.


**Comment √ßa fonctionne ?**

#. D√©finir les valeurs initiales et les pins de tous les composants.

    .. code-block:: arduino

        const int buzzerPin = 9;
        const int ledPin = 8;
        const int photocellPin = A0;  //photoresistor attach to A2
    
        int lightLow = 1023;
        int lightHigh = 0;
    
        int sensorValue = 0;        // value read from the sensor
        int pitch = 0;           // sensor value converted into LED 'bars'
    
        unsigned long previousMillis = 0;
        const long interval = 5000;

#. Mettez en place un processus de calibration dans ``setup()``.

    .. code-block:: arduino

        void setup()
        {
            pinMode(buzzerPin, OUTPUT); // make buzzer output
            pinMode(ledPin, OUTPUT); // make the LED pin output

            /* calibrate the photoresistor max & min values */
            previousMillis = millis();
            digitalWrite(ledPin, HIGH);
            while (millis() - previousMillis <= interval) {
                sensorValue = analogRead(photocellPin);
                if (sensorValue > lightHigh) {
                    lightHigh = sensorValue;
                }
                if (sensorValue < lightLow) {
                    lightLow = sensorValue;
                }
            }
            digitalWrite(ledPin, LOW);
        }

    Le d√©roulement du travail est le suivant.

    * en utilisant ``millis()`` pour le chronom√©trage avec un intervalle de 5000 ms.

    .. code-block:: arduino

        previousMillis = millis();
        ...
        while (millis() - previousMillis <= interval) {
        ...
        }

    * Pendant ces cinq secondes, agitez une main autour de la photor√©sistance, les valeurs maximales et minimales ‚Äã‚Äãde la lumi√®re d√©tect√©e sont enregistr√©es et assign√©es respectivement √† ``lightHigh`` et ``lightLow``.

    .. code-block:: arduino
        
        sensorValue = analogRead(photocellPin);
        if (sensorValue > lightHigh) {
            lightHigh = sensorValue;
        }
        if (sensorValue < lightLow) {
            lightLow = sensorValue;
        }

#. Vous pouvez maintenant commencer √† jouer ce Theremin. Lisez la valeur de la photor√©sistance √† ``sensorValue`` et mappez-la de la petite plage √† la grande plage pour √™tre utilis√©e comme fr√©quence du buzzer. 

    .. code-block:: arduino

        void loop()
        {
        /* play*/
        sensorValue = analogRead(photocellPin); //read the value of A0
        pitch = map(sensorValue, lightLow, lightHigh, 50, 6000);  // map to the buzzer frequency
        if (pitch > 50) {
            tone(buzzerPin, pitch, 20);
        }
        delay(10);
        }