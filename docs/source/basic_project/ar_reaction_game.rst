.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _ar_reaction_game:

6.5 Jeu de R√©action
===================

Notre corps a de nombreux temps de r√©action, tels que le temps de r√©action auditif, visuel, tactile, etc.

Les temps de r√©action ont de nombreux effets sur notre vie quotidienne, par exemple, des temps de r√©action plus lents que la normale en conduisant peuvent entra√Æner de graves cons√©quences.

Dans ce projet, nous utilisons 3 boutons et 2 LED pour mesurer notre temps de r√©action visuel.

Le moniteur s√©rie de l'Arduino affiche le message "en attente..."
Apr√®s avoir appuy√© sur le bouton Pr√™t, l'une des deux LED doit s'allumer al√©atoirement apr√®s un intervalle de temps al√©atoire. Il est important que la personne test√©e appuie sur le bouton correspondant le plus rapidement possible.
L'Arduino enregistre la diff√©rence de temps entre le moment o√π la LED s'allume et lorsque la personne appuie sur le bouton correspondant, et imprime le temps de r√©ponse mesur√© sur le moniteur s√©rie de l'Arduino.

**Composants requis**

Pour ce projet, nous aurons besoin des composants suivants.

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - √âL√âMENTS DE CE KIT
        - LIEN
    *   - 3 in 1 Starter Kit
        - 380+
        - |link_3IN1_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_uno`
        - |link_Uno_R3_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_button`
        - |link_button_buy|

**Sch√©ma**

.. image:: img/wiring_reaction_game.png
    :align: center

**C√¢blage**

.. image:: img/reaction_game.png
    :align: center

**Code**

.. note::

    * Vous pouvez ouvrir le fichier ``6.5_reaction_time.ino`` sous le chemin de ``3in1-kit\basic_project\6.5_reversingAid`` directement.
    * Ou copiez ce code dans Arduino IDE .
    
    * Assurez-vous d'avoir ajout√© la biblioth√®que ``LiquidCrystal_I2C``, les tutoriels d√©taill√©s se r√©f√®rent √† :ref:`install_libraries_ar`.


.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/4313dd1c-e1d2-4939-ae20-0a5b82a12390/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

**Comment √ßa fonctionne ?**

#. Initialisez les boutons et les LED, 2 interruptions sont utilis√©es ici pour lire l'√©tat des boutons.

    .. code-block:: arduino

        void setup()
        {

            ...

            attachInterrupt(digitalPinToInterrupt(buttonPin1), pressed1, FALLING);
            attachInterrupt(digitalPinToInterrupt(buttonPin2), pressed2, FALLING);
            ...
        }



#. Si le bouton ``rstBtn`` est press√©, le jeu recommence. √Ä un moment al√©atoire entre 2 et 5ms, faites s'allumer l'une des LED.

    .. code-block:: arduino

        void loop()
        {
            if (flag == -1 && digitalRead(rstBtn) == LOW) {
                digitalWrite(ledPin1, LOW);
                digitalWrite(ledPin2, LOW);
                Serial.println("Waiting...");
                int randomTime = random(2000, 5000);
                delay(randomTime);

                timer = millis();
                flag = randomTime % 2;
                Serial.println("Light!");

                if (flag == 0) {
                    digitalWrite(ledPin1, HIGH);
                } else if (flag == 1) {
                    digitalWrite(ledPin2, HIGH);
                }
            }
            delay(200);
        }

    * Lorsque flag est -1 et que le bouton ``rstBtn`` est press√©, utilisez la fonction ``random()`` pour g√©n√©rer un temps al√©atoire de 2-5s.
    * Ce temps est ensuite utilis√© pour contr√¥ler l'allumage des LED.
    * Aussi, l'allumage de 2 LED est g√©n√©r√© al√©atoirement par ``randomTime % 2`` avec 0 et 1. Si flag est 0, alors LED1 est allum√©e ; si 1, alors LED2 est allum√©e.

#. √Ä propos de la fonction ``pressed1()``

    .. code-block:: arduino

        void pressed1() {
            if (flag == -1) {
                return;
            }
            if (flag == 0) {
                int currentTime = millis();
                Serial.print("Correct! You reaction time is : ");
                Serial.print(currentTime - timer);
                Serial.println(" ms");
            } else if (flag == 1) {
                Serial.println("Wrong Click!");
            }
            flag = -1;
        }

    C'est la fonction qui sera d√©clench√©e lorsque le bouton 1 est press√©. Lorsque le bouton 1 est press√©, si le flag est 0 √† ce moment, le temps de r√©ponse sera imprim√©, sinon une erreur de pression sera indiqu√©e.

#. √Ä propos de la fonction ``pressed2()``

    .. code-block:: arduino

        void pressed2() {
            if (flag == -1) {
                return;
            }
            if (flag == 1) {
                int currentTime =millis();
                Serial.print("Correct! You reaction time is : ");
                Serial.print(currentTime - timer);
                Serial.println(" ms");
            } else if (flag == 0) {
                Serial.println("Wrong Click!");
            }
            flag = -1;
        }

    C'est la fonction qui sera d√©clench√©e lorsque le bouton 2 est press√©. Lorsque le bouton 2 est press√©, si le flag est 1 √† ce moment, le temps de r√©ponse sera imprim√©, sinon une erreur de pression sera indiqu√©e.


