.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et √† des promotions festives.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _ar_lcd1602:

5.11.1 Afficheur √† Cristaux Liquides
========================================

Un √©cran I2C LCD1602 est compos√© d'un LCD1602 et d'un module I2C. Le LCD1602 peut afficher des caract√®res, des chiffres, etc., mais n√©cessite beaucoup de broches du contr√¥leur principal. Une fois configur√© avec un module I2C, seulement 2 broches d'entr√©e/sortie sont n√©cessaires pour piloter ce LCD1602.

Voyons maintenant comment faire fonctionner cet I2C LCD1602.

**Composants n√©cessaires**

Dans ce projet, nous avons besoin des composants suivants :

C'est pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit de d√©marrage 3 en 1
        - 380+
        - |link_3IN1_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_uno`
        - \-
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_i2c_lcd1602`
        - |link_i2clcd1602_buy|

**Sch√©ma**

.. image:: img/circuit_7.1_lcd1602.png

**C√¢blage**

.. image:: img/5.11_lcd_bb.png
    :width: 800
    :align: center

.. note::
    Les broches SDA et SCL de la carte R4 sont respectivement les broches A4 et A5.

**Code**

.. note::

    * Ouvrez le fichier ``5.11.liquid_crystal_display.ino`` dans le r√©pertoire ``3in1-kit\learning_project\5.11.liquid_crystal_display``.
    * Ou copiez ce code dans l'IDE Arduino.
    * La biblioth√®que ``LiquidCrystal I2C`` est utilis√©e ici, vous pouvez l'installer depuis le **Library Manager**.

        .. image:: ../img/lib_liquidcrystal_i2c.png
    

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/e49c4936-2530-4890-b86c-1017d11eae6e/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>
    
Apr√®s le t√©l√©versement r√©ussi du code, vous verrez "SunFounder" et "Hello World" sur l'I2C LCD1602.

.. note::
    Si le code et le c√¢blage sont corrects, mais que le LCD n'affiche toujours pas de contenu, vous pouvez ajuster le potentiom√®tre situ√© √† l'arri√®re.

**Comment √ßa fonctionne ?**

En appelant la biblioth√®que ``LiquidCrystal_I2C.h``, vous pouvez facilement piloter le LCD.

.. code-block:: arduino

    #include "LiquidCrystal_I2C.h"

Fonctions de la biblioth√®que :

.. code-block:: arduino

    LiquidCrystal_I2C(uint8_t lcd_Addr,uint8_t lcd_cols,uint8_t lcd_rows)

Cr√©e une nouvelle instance de la classe ``LiquidCrystal_I2C`` repr√©sentant un LCD sp√©cifique connect√© √† votre carte Arduino.

* ``lcd_AddR`` : L'adresse du LCD par d√©faut est 0x27.
* ``lcd_cols`` : Le LCD1602 dispose de 16 colonnes.
* ``lcd_rows`` : Le LCD1602 dispose de 2 lignes.

.. code-block:: arduino

    void init()

Initialise le LCD.

.. code-block:: arduino

    void backlight()

Active le r√©tro√©clairage (optionnel).

.. code-block:: arduino

    void nobacklight()

D√©sactive le r√©tro√©clairage (optionnel).

.. code-block:: arduino

    void display()

Active l'affichage du LCD.

.. code-block:: arduino

    void nodisplay()

D√©sactive rapidement l'affichage du LCD.

.. code-block:: arduino

    void clear()

Efface l'affichage et positionne le curseur √† z√©ro.

.. code-block:: arduino

    void setCursor(uint8_t col,uint8_t row)

Positionne le curseur √† la colonne et ligne sp√©cifi√©es.

.. code-block:: arduino

    void print(data,BASE)

Imprime du texte sur le LCD.

* ``data`` : Les donn√©es √† imprimer (char, byte, int, long ou string).
* ``BASE (optionnel)`` : La base pour imprimer les nombres : BIN pour binaire (base 2), DEC pour d√©cimal (base 10), OCT pour octal (base 8), HEX pour hexad√©cimal (base 16).
