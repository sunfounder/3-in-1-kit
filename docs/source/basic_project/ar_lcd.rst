.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _ar_lcd1602:

5.11.1 Affichage √† Cristaux Liquides
====================================

Un LCD1602 I2C est compos√© d'un LCD1602 et d'un module I2C. Le LCD1602 peut √™tre utilis√© pour afficher des caract√®res, des nombres, etc., mais n√©cessite l'utilisation de nombreux pins du contr√¥leur principal. Apr√®s configuration d'un module I2C, seulement 2 pins I/O sont n√©cessaires pour piloter ce LCD1602.

Voyons maintenant comment faire fonctionner ce LCD1602 I2C.

**Composants requis**

Pour ce projet, nous aurons besoin des composants suivants.

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - √âL√âMENTS DE CE KIT
        - LIEN
    *   - 3 in 1 Starter Kit
        - 380+
        - |link_3IN1_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_uno`
        - |link_Uno_R3_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_i2c_lcd1602`
        - |link_i2clcd1602_buy|


**Sch√©ma**

.. image:: img/circuit_7.1_lcd1602.png

**C√¢blage**

.. image:: img/lcd_bb.jpg
    :width: 800
    :align: center

.. note::
    Les pins SDA et SCL de la carte R3 sont les pins A4 et A5.

**Code**

.. note::

    * Ouvrez le fichier ``5.11.liquid_crystal_display.ino`` situ√© dans le dossier ``3in1-kit\basic_project\5.11.liquid_crystal_display``.
    * Ou copiez ce code dans **Arduino IDE**.
    * La biblioth√®que ``LiquidCrystal I2C`` est utilis√©e ici, vous pouvez l'installer depuis le **Library Manager**.

        .. image:: ../img/lib_liquidcrystal_i2c.png
    

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/e49c4936-2530-4890-b86c-1017d11eae6e/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>
    
Apr√®s le t√©l√©versement r√©ussi du code, vous verrez "SunFounder", "Hello World" sur le LCD1602 I2C.

.. note::
    Si le code et le c√¢blage sont corrects, mais que l'√©cran LCD n'affiche toujours pas de contenu, vous pouvez tourner le potentiom√®tre situ√© √† l'arri√®re.

**Comment √ßa fonctionne ?**

En appelant la biblioth√®que ``LiquidCrystal_I2C.h``, vous pouvez facilement piloter l'√©cran LCD.

.. code-block:: arduino

    #include "LiquidCrystal_I2C.h"

Fonctions de la biblioth√®que : 

.. code-block:: arduino

    LiquidCrystal_I2C(uint8_t lcd_Addr,uint8_t lcd_cols,uint8_t lcd_rows)

Cr√©e une nouvelle instance de la classe ``LiquidCrystal_I2C`` qui repr√©sente un
√©cran LCD particulier connect√© √† votre carte Arduino.

* ``lcd_AddR`` : L'adresse de l'√©cran LCD est par d√©faut 0x27.
* ``lcd_cols`` : Le LCD1602 a 16 colonnes.
* ``lcd_rows`` : Le LCD1602 a 2 lignes.


.. code-block:: arduino

    void init()

Initialise l'√©cran LCD.

.. code-block:: arduino

    void backlight()

Allume le r√©tro√©clairage (optionnel).

.. code-block:: arduino

    void nobacklight()

√âteint le r√©tro√©clairage (optionnel).

.. code-block:: arduino

    void display()

Allume l'affichage de l'√©cran LCD.

.. code-block:: arduino

    void nodisplay()

√âteint rapidement l'affichage de l'√©cran LCD.

.. code-block:: arduino

    void clear()

Efface l'√©cran et positionne le curseur √† z√©ro.

.. code-block:: arduino

    void setCursor(uint8_t col,uint8_t row)

Positionne le curseur √† la colonne col et √† la ligne row.

.. code-block:: arduino

    void print(data,BASE)

Affiche du texte sur l'√©cran LCD.

* ``data`` : Les donn√©es √† afficher (char, byte, int, long ou string).
* ``BASE (optionnel)`` : La base dans laquelle afficher les nombres : BIN pour binaire (base 2), DEC pour d√©cimal (base 10), OCT pour octal (base 8), HEX pour hexad√©cimal (base 16).

