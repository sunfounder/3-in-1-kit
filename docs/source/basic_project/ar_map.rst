.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _ar_map:

5.6 Cartographie
===================

Si vous observez attentivement, vous remarquerez que de nombreuses valeurs ont des plages diff√©rentes en programmation.
Par exemple, la plage de valeurs pour les entr√©es analogiques est de (0~1023).
La plage de valeurs pour la sortie analogique est de (0~255).
L'angle de sortie du servomoteur est de (0~180).

Cela signifie que si nous voulons utiliser le potentiom√®tre pour contr√¥ler la luminosit√© de la LED ou l'angle du servomoteur, nous devons passer par une op√©ration de cartographie.

Voyons maintenant comment y parvenir.

**Composants requis**

Pour ce projet, nous avons besoin des composants suivants.

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - √âL√âMENTS DE CE KIT
        - LIEN
    *   - 3 in 1 Starter Kit
        - 380+
        - |link_3IN1_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_uno`
        - |link_Uno_R3_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_servo`
        - |link_servo_buy|
    *   - :ref:`cpn_potentiometer`
        - |link_potentiometer_buy|

**Sch√©ma**

.. image:: img/circuit_8.3_amp.png

**C√¢blage**

.. image:: img/map_bb.jpg
    :width: 800
    :align: center

**Code**

.. note::

    * Ouvrez le fichier ``5.6.map.ino`` sous le chemin ``3in1-kit\basic_project\5.6.map``.
    * Ou copiez ce code dans **Arduino IDE**.
    
    * Ou t√©l√©chargez le code via l'`Arduino Web Editor <https://docs.arduino.cc/cloud/web-editor/tutorials/getting-started/getting-started-web-editor>`_.

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/f00e4c4c-fb13-4445-9d89-eb2857b5fe87/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>
    
Apr√®s le t√©l√©chargement r√©ussi du code, vous pouvez tourner le potentiom√®tre d'avant en arri√®re, et l'arbre de sortie du servo tournera d'avant en arri√®re.

**Comment √ßa fonctionne ?**

``map(value, fromLow, fromHigh, toLow, toHigh)`` : Mappez un nombre d'une plage √† une autre.
C'est-√†-dire qu'une valeur de fromLow est mapp√©e sur toLow, et une valeur de fromHigh est mapp√©e sur toHigh.

    **Syntaxe**
        map(value, fromLow, fromHigh, toLow, toHigh)

    **Param√®tres**
        * ``value`` : le nombre √† mapper.
        * ``fromLow`` : la limite inf√©rieure de la plage actuelle de la valeur.
        * ``fromHigh`` : la limite sup√©rieure de la plage actuelle de la valeur.
        * ``toLow`` : la limite inf√©rieure de la plage cible de la valeur.
        * ``toHigh`` : la limite sup√©rieure de la plage cible de la valeur.

Si le potentiom√®tre contr√¥le la LED, vous pouvez √©galement utiliser la cartographie pour accomplir la t√¢che.

.. code-block:: arduino

    int x = analogRead(knob);
    int y = map(x,0,1023,0,255);
    analogWrite(led,y);


**Notes et Avertissements**

* La "limite inf√©rieure" des deux plages peut √™tre plus grande ou plus petite que la "limite sup√©rieure", ce qui signifie que la fonction ``map()`` peut √™tre utilis√©e pour inverser une plage de nombres.

  .. code-block:: arduino

    y = map(x,0,180,180,0);

* La cartographie fonctionne √©galement bien pour les nombres n√©gatifs.

  .. code-block:: arduino

    y = map(x,0,1023,-90,90);

* La cartographie utilise des entiers, et les d√©cimales des nombres flottants sont ignor√©es.
