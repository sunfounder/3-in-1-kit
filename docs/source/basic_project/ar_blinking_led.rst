.. note::

    ¬°Hola, bienvenido a la Comunidad de Aficionados a Raspberry Pi, Arduino y ESP32 de SunFounder en Facebook! Profundiza en Raspberry Pi, Arduino y ESP32 con otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte de expertos**: Resuelve problemas posventa y desaf√≠os t√©cnicos con ayuda de nuestra comunidad y equipo.
    - **Aprender y compartir**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Vistas previas exclusivas**: Obt√©n acceso anticipado a anuncios de nuevos productos y avances.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s nuevos.
    - **Promociones festivas y sorteos**: Participa en sorteos y promociones de fiestas.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy!

.. _ar_blink:

1.1 ¬°Hola, LED! 
=======================================

As√≠ como imprimir ‚Äú¬°Hola, mundo!‚Äù es el primer paso para aprender a programar, usar un programa para activar un LED es la introducci√≥n tradicional para aprender programaci√≥n f√≠sica.

**Componentes Necesarios**

En este proyecto, necesitamos los siguientes componentes.

Es definitivamente conveniente comprar un kit completo, aqu√≠ est√° el enlace:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre	
        - ELEMENTOS EN ESTE KIT
        - ENLACE
    *   - 3 in 1 Starter Kit
        - 380+
        - |link_3IN1_kit|

Tambi√©n puedes comprarlos por separado en los enlaces a continuaci√≥n.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCCI√ìN DEL COMPONENTE
        - ENLACE DE COMPRA

    *   - :ref:`cpn_uno`
        - |link_Uno_R3_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|

**Esquem√°tico**

.. image:: img/circuit_1.1_led.png

El principio de este circuito es simple y la direcci√≥n de la corriente se muestra en la figura. Cuando el pin 9 emite un nivel alto (5V), el LED se encender√° despu√©s de la resistencia limitadora de corriente de 220ohm. Cuando el pin 9 emite un nivel bajo (0v), el LED se apagar√°.

**Cableado**

.. image:: img/wiring_led.png
    :width: 400
    :align: center

**C√≥digo**

.. note::

   * Puedes abrir el archivo ``1.1.hello_led.ino`` en la ruta ``3in1-kit\basic_project\1.1.hello_led``.
   * O copia este c√≥digo en **Arduino IDE**.
   
   * O carga el c√≥digo a trav√©s del `Editor Web de Arduino <https://docs.arduino.cc/cloud/web-editor/tutorials/getting-started/getting-started-web-editor>`_.

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/0497f915-5bf8-41a2-8e0f-b013130a57f5/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

Despu√©s de cargar el c√≥digo con √©xito, ver√°s el LED parpadeando.

**¬øC√≥mo funciona?**

Aqu√≠, conectamos el LED al pin digital 9, por lo que necesitamos declarar una variable int llamada ledpin al principio del programa y asignarle un valor de 9.

.. code-block:: arduino

    const int ledPin = 9;


Ahora, inicializa el pin en la funci√≥n ``setup()``, donde necesitas inicializar el pin en modo ``OUTPUT``.

.. code-block:: arduino

    void setup() {
        pinMode(ledPin, OUTPUT);
    }

En ``loop()``, se utiliza ``digitalWrite()`` para proporcionar una se√±al de nivel alto de 5V para ledpin, lo que provocar√° una diferencia de voltaje entre los pines del LED y lo encender√°.

.. code-block:: arduino

    digitalWrite(ledPin, HIGH);

Si la se√±al de nivel se cambia a LOW, la se√±al de ledPin volver√° a 0 V para apagar el LED.

.. code-block:: arduino

    digitalWrite(ledPin, LOW);

Se requiere un intervalo entre encendido y apagado para permitir que las personas vean el cambio, 
por lo que usamos un c√≥digo ``delay(1000)`` para dejar que el controlador no haga nada durante 1000 ms.

.. code-block:: arduino

    delay(1000);   