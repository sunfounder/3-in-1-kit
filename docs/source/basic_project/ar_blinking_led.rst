.. note:: 

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez plus profond√©ment dans Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprenez et partagez** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et promotions de vacances.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _ar_blink:

1.1 Bonjour, LED ! 
==============================

Allumer une LED √† l‚Äôaide d‚Äôun programme est une introduction classique √† la programmation physique, tout comme afficher ¬´ Bonjour, monde ! ¬ª est la premi√®re √©tape pour apprendre la programmation.

**Composants n√©cessaires**

Dans ce projet, nous aurons besoin des composants suivants. 

Il est tr√®s pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - ARTICLES DANS CE KIT
        - LIEN
    *   - 3 in 1 Starter Kit
        - 380+
        - |link_3IN1_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_uno`
        - \-
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|

**Sch√©ma**

.. image:: img/circuit_1.1_led.png

Le principe de ce circuit est simple et le sens du courant est indiqu√© sur le sch√©ma. Lorsque la broche 9 fournit un signal haut (5V), la LED s‚Äôallume via la r√©sistance limitant le courant de 1 kohm. Lorsque la broche 9 fournit un signal bas (0V), la LED s‚Äô√©teint.

**C√¢blage**

.. image:: img/1.1_hello_led_bb.png
    :width: 600
    :align: center

**Code**

.. note::

   * Vous pouvez ouvrir le fichier ``1.1.hello_led.ino`` sous le chemin ``3in1-kit\learning_project\1.1.hello_led``.
   * Ou copiez ce code dans **Arduino IDE**.
   
.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/0497f915-5bf8-41a2-8e0f-b013130a57f5/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

Apr√®s le t√©l√©chargement r√©ussi du code, vous verrez la LED clignoter.

**Comment √ßa fonctionne ?**

Ici, nous connectons la LED √† la broche num√©rique 9, nous devons donc d√©clarer une variable enti√®re appel√©e ``ledPin`` au d√©but du programme et lui attribuer la valeur 9.

.. code-block:: arduino

    const int ledPin = 9;

Ensuite, initialisez la broche dans la fonction ``setup()``, o√π vous devez d√©finir la broche en mode ``OUTPUT``.

.. code-block:: arduino

    void setup() {
        pinMode(ledPin, OUTPUT);
    }

Dans la fonction ``loop()``, utilisez ``digitalWrite()`` pour fournir un signal haut de 5V √† ``ledPin``, ce qui cr√©era une diff√©rence de tension entre les broches de la LED et allumera la LED.

.. code-block:: arduino

    digitalWrite(ledPin, HIGH);

Si le signal est modifi√© √† LOW, le signal de ``ledPin`` revient √† 0V, ce qui √©teindra la LED.

.. code-block:: arduino

    digitalWrite(ledPin, LOW);

Un intervalle entre l'allumage et l'extinction est n√©cessaire pour permettre de voir 
le changement. Nous utilisons donc ``delay(1000)`` pour que le contr√¥leur reste inactif 
pendant 1000 ms.

.. code-block:: arduino

    delay(1000);