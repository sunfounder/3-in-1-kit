.. note:: 

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez plus profond√©ment dans Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprenez et partagez** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et promotions de vacances.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _ar_button:

3.1 Lecture de la valeur du bouton
==============================================


Dans les projets pr√©c√©dents, nous avons utilis√© la fonction de sortie. Dans ce chapitre, nous allons utiliser la fonction d'entr√©e pour lire la valeur d'un bouton.

**Composants n√©cessaires**

Dans ce projet, nous aurons besoin des composants suivants. 

Il est tr√®s pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - ARTICLES DANS CE KIT
        - LIEN
    *   - 3 in 1 Starter Kit
        - 380+
        - |link_3IN1_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_uno`
        - \-
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_button`
        - |link_button_buy|

**Sch√©ma**

.. image:: img/circuit_3.1_button.png

Un c√¥t√© de la broche du bouton est connect√© √† 5V, 
et l'autre c√¥t√© est connect√© √† la broche 2. 
Ainsi, lorsque le bouton est press√©, 
la broche 2 sera √† un niveau haut. Cependant, 
lorsque le bouton n'est pas press√©, 
la broche 2 est dans un √©tat flottant et peut √™tre √† un niveau haut ou bas. 
Pour obtenir un niveau bas stable lorsque le bouton n'est pas press√©, 
la broche 2 doit √™tre reli√©e √† la masse (GND) via une r√©sistance de tirage de 10K.




**C√¢blage**

.. image:: img/3.1_reading_button_value_bb.png
    :width: 600
    :align: center

**Code**

.. note::

   * Vous pouvez ouvrir le fichier ``3.1.read_button_value.ino`` sous le chemin ``3in1-kit\learning_project\3.1.read_button_value``.
   * Ou copiez ce code dans **Arduino IDE**.

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/b456ff57-4dfb-4231-9d91-f1e9a5777de2/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

Apr√®s avoir t√©l√©charg√© le code avec succ√®s, cliquez sur l'ic√¥ne en forme de loupe dans le coin sup√©rieur droit de l'IDE Arduino (Moniteur S√©rie).

.. image:: img/sp220614_152922.png

Lorsque vous appuyez sur le bouton, le Moniteur S√©rie affichera "1".
