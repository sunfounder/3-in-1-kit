回路の作り方
=============

私たちが日常で使用する多くの物は電気で動いています。例えば、家の照明やこの文章を読んでいるコンピューターなどです。

電気を利用するためには、電気回路を作成する必要があります。基本的に、回路とは電気が流れる道のことであり、電子回路とも呼ばれます。回路は特定の方法で接続された電気デバイスやコンポーネント（機器）で構成されています。例えば、抵抗器、コンデンサー、電源、スイッチなどです。

.. image:: img/circuit.png

回路は電流を作成するために電子が移動する閉じた経路です。電流を流すためには、電源の正極と負極との間に導電経路が存在しなければならず、これを閉回路と言います（途切れている場合は、開回路と呼ばれます）。

Arduinoボードには電源出力ピン（正極）と接地ピン（負極）があります。
これらのピンを使用して、電源の正負側としてボードに電源を接続することができます。

.. image:: img/arduinoPN.jpg

電気を使えば、光や音、動きのある作品を作成することができます。
LEDの長いピンを正極に、短いピンを負極に接続することでLEDを点灯させることができます。
この状態で使用すると、LEDはすぐに壊れてしまうので、回路内に1KΩの抵抗器を追加して保護する必要があります。

以下にその回路の形状を示します。

.. image:: img/sp221014_181625.png

この時点で疑問が湧くかもしれません。この回路をどのように組み立てればよいのでしょうか。ワイヤーを手で持っているだけで、ピンとワイヤーをテープで固定するのでしょうか。

このような場合、はんだを使わないブレッドボードが大変役立ちます。

.. _bc_bb:

ブレッドボード、こんにちは！
------------------------------

ブレッドボードは小さな穴がたくさん開いている長方形のプラスチック製の板です。
これらの穴には、電子部品を簡単に挿入して、電子回路を組むことができます。
ブレッドボードは電子部品を恒久的に固定しないので、何か問題が発生した場合、簡単に修理や再開ができます。

.. note::
    ブレッドボードを使用する際に特別なツールは必要ありません。ただし、多くの電子部品は非常に小さいので、ピンセットを使用して小さな部品をより効果的に取り扱うことができます。

インターネット上では、ブレッドボードに関する多くの情報が見つかります。

* `ブレッドボードの使い方 - Science Buddies <https://www.sciencebuddies.org/science-fair-projects/references/how-to-use-a-breadboard#pth-smd>`_

* `ブレッドボードとは何ですか? - Makezine <https://cdn.makezine.com/uploads/2012/10/breadboardworkshop.pdf>`_

ブレッドボードについて知っておくべきことは以下の通りです。

#. 各ハーフロウグループ（例：1行目の列A-Eや3行目の列F-J）は接続されています。そのため、A1から電気信号が流れ込むと、B1, C1, D1, E1から流れ出すことができますが、F1やA2からは流れ出すことはできません。

#. ほとんどの場合、ブレッドボードの両側は電源バスとして使用され、各列の穴（約50の穴）は互いに接続されています。一般的に、正の電源は赤いワイヤーの近くの穴に、負の電源は青いワイヤーの近くの穴に接続されます。

#. 回路内では、負極から正極へと電流が流れます。この場合、ショート回路が発生する可能性があります。

**電流の流れる方向に従って、回路を組み立ててみましょう！**

.. image:: img/sp221014_182229.png

1. この回路では、ボードの5Vピンを使用してLEDに電力を供給します。M2Mジャンパワイヤーを使用して、それを赤い電源バスに接続します。
#. LEDを保護するためには、1Kオームの抵抗を経由して電流を流す必要があります。抵抗の一方の端子（どちらの端子でも良い）を赤い電源バスに、もう一方の端子をブレッドボードの空いている行に接続します。

    .. note::
        1kΩ抵抗器のカラーコードは茶、黒、黒、茶、茶です。

#. LEDを取り上げると、片方のリードが他方よりも長いことがわかります。抵抗と同じ行に長いリードを接続し、短いリードを別の行に接続します。

    .. note::
        長いリードはアノード（正極）を示し、短いリードはカソード（負極）を示します。

        アノードは抵抗を経由してGPIOピンに接続する必要があり、カソードはGNDピンに接続する必要があります。

#. M2Mジャンパワイヤーを使用して、LEDの短いピンをブレッドボードの負の電源バスに接続します。
#. ジャンパを使用して、ボードのGNDピンを負の電源バスに接続します。

ショート回路に注意
------------------------------
ショート回路は、接続されるべきでない2つのコンポーネントが「偶然」接続されたときに発生します。
このキットには、抵抗器、トランジスタ、コンデンサ、LEDなど、お互いに接触してショートを引き起こす可能性のある長い金属のピンを持つ部品が含まれています。ショートが発生すると、一部の回路は正常に動作しなくなるだけでなく、特に電源と接地バスの間で、回路が非常に高温になり、ブレッドボードのプラスチックが溶け、部品が焼損することもあります。

そのため、ブレッドボード上のすべての電子部品のピンが互いに接触していないことを常に確認してください。


回路の方向性
-------------------------------
回路には方向性があります。この方向性は、特定の電子部品において非常に重要な役割を果たします。正極と負極に基づいて正しく接続する必要がある極性を持つデバイスがあります。方向性を間違えて構築された回路は正常に動作しません。

.. image:: img/sp221014_182229.png

以前作成したこのシンプルな回路でLEDを逆にすると、LEDが動作しなくなることがわかります。

逆に、この回路の抵抗器のように方向性を持たないデバイスもありますので、それらを逆にしてもLEDの正常な動作に影響はありません。

"+"、"-"、"GND"、"VCC"などのラベルが付いている、または異なる長さのピンを持つほとんどの部品やモジュールは、特定の方法で回路に接続する必要があります。


回路の保護
-------------------------------------

電流は、完全な電気回路のある点を過ぎる電子の流れの速さです。最も基本的には、電流 = 流れです。アンペアは、電流を測定するための国際的な単位です。これは、特定の時間内に回路のある点を過ぎる電子（「電気充電」とも呼ばれる）の数量を表します。

電流の流れの背後にある原動力は電圧と呼ばれ、ボルト（V）で測定されます。

抵抗（R）は、電流の流れを制限する材料の性質であり、オーム（Ω）で測定されます。

オームの法則によれば（温度が一定の場合）、電流、電圧、および抵抗は比例します。
回路の電流はその電圧に比例し、その抵抗に反比例します。

したがって、電流（I）= 電圧（V）/ 抵抗（R）です。

* `オームの法則 - Wikipedia <https://en.wikipedia.org/wiki/Ohm%27s_law>`_

オームの法則については、簡単な実験を行うことができます。

.. image:: img/sp221014_183107.png

5Vから3.3Vに接続するワイヤーを変更すると、LEDの光が暗くなります。
抵抗を1kohmから2kohmに変更すると、LEDが以前よりも暗くなることに気付くでしょう。抵抗が大きいほど、LEDは暗くなります。

.. note::
    抵抗についての紹介や抵抗値の計算方法については、 :ref:`cpn_resistor` を参照してください。

ほとんどのパッケージ化されたモジュールは、超音波モジュールのように適切な電圧（通常3.3Vまたは5V）へのアクセスのみが必要です。

ただし、自作の回路では、電気デバイスの供給電圧と抵抗の使用に注意する必要があります。

例として、LEDは通常、20mAの電流を消費し、その電圧降下は約1.8Vです。オームの法則に従えば、5Vの電源を使用する場合、LEDを焼き切らないように、最低160ohmの抵抗（(5-1.8)/20mA）を接続する必要があります。



Arduinoでの回路制御
--------------------------------

Arduinoのプログラミングと電子回路の基本的な理解が得られたので、最も重要な質問に取り組む時が来ました：Arduinoで回路をどのように制御するか。

簡単に言えば、Arduinoが回路を制御する方法は、ボード上のピンのレベルを変更することです。例えば、オンボードLEDを制御するとき、それはピン13に高いまたは低いレベルの信号を書き込むことです。

さて、ブレッドボード上の点滅するLEDを制御するためのArduinoボードをコード化してみましょう。LEDがピン9に接続されているように回路を構築します。

.. image:: img/wiring_led.png
    :width: 400
    :align: center

次に、このスケッチをArduino開発ボードにアップロードします。

.. code-block:: C

    int ledPin = 9;
    int delayTime = 500;

    void setup() {
        pinMode(ledPin,OUTPUT); 
    }

    void loop() {
        digitalWrite(ledPin,HIGH); 
        delay(delayTime); 
        digitalWrite(ledPin,LOW); 
        delay(delayTime);
    }

このスケッチは、オンボードLEDの点滅を制御するために使用したものと非常に似ていますが、 ``ledPin`` の値が9に変更されています。
これは、今回はピン9のレベルを制御しようとしているためです。

これで、ブレッドボード上のLEDが点滅しているのが見えるでしょう。

