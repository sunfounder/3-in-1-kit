.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

Struktur eines Arduino-Programms
======================================

Werfen wir einen Blick auf die neue Skizze. Obwohl sie nur wenige Codezeilen enth√§lt, handelt es sich tats√§chlich um eine "leere" Skizze.
Das Hochladen dieser Skizze auf das Entwicklungsboard wird keine Aktion ausl√∂sen.

.. code-block:: C

    void setup() {
    // F√ºgen Sie Ihren Setup-Code hier ein, der einmal ausgef√ºhrt wird:

    }

    void loop() {
    // F√ºgen Sie Ihren Hauptcode hier ein, der wiederholt ausgef√ºhrt wird:

    }

Wenn wir ``setup()`` und ``loop()`` entfernen und die Skizze zu einer wirklichen ``leeren`` Datei machen, werden Sie feststellen, dass sie die √úberpr√ºfung nicht besteht.
Sie sind das √Ñquivalent zum menschlichen Skelett und unverzichtbar.

W√§hrend des Skizzierens wird ``setup()`` zuerst ausgef√ºhrt und der Code darin (innerhalb von ``{}``) wird nach dem Einschalten oder Zur√ºcksetzen des Boards einmal ausgef√ºhrt. 
``loop()`` dient zum Schreiben der Hauptfunktion, und der darin enthaltene Code wird in einer Schleife nach der Ausf√ºhrung von ``setup()`` wiederholt.

Um setup() und loop() besser zu verstehen, betrachten wir vier Skizzen. Ihr Ziel ist es, die integrierte LED des Arduino blinken zu lassen. Bitte f√ºhren Sie jedes Experiment nacheinander aus und notieren Sie die spezifischen Effekte.

* Skizze 1: Lassen Sie die integrierte LED kontinuierlich blinken.

.. code-block:: C
    :emphasize-lines: 8,9,10,11

    void setup() {
        // F√ºgen Sie Ihren Setup-Code hier ein, der einmal ausgef√ºhrt wird:
        pinMode(13,OUTPUT); 
    }

    void loop() {
        // F√ºgen Sie Ihren Hauptcode hier ein, der wiederholt ausgef√ºhrt wird:
        digitalWrite(13,HIGH);
        delay(500);
        digitalWrite(13,LOW);
        delay(500);
    }

* Skizze 2: Lassen Sie die integrierte LED nur einmal blinken. 

.. code-block:: C
    :emphasize-lines: 4,5,6,7

    void setup() {
        // F√ºgen Sie Ihren Setup-Code hier ein, der einmal ausgef√ºhrt wird:
        pinMode(13,OUTPUT);
        digitalWrite(13,HIGH);
        delay(500);
        digitalWrite(13,LOW);
        delay(500);
    }

    void loop() {
        // F√ºgen Sie Ihren Hauptcode hier ein, der wiederholt ausgef√ºhrt wird:
    }

* Skizze 3: Lassen Sie die integrierte LED einmal langsam und dann schnell blinken.

.. code-block:: C
    :emphasize-lines: 4,5,6,7,12,13,14,15

    void setup() {
        // F√ºgen Sie Ihren Setup-Code hier ein, der einmal ausgef√ºhrt wird:
        pinMode(13,OUTPUT);
        digitalWrite(13,HIGH);
        delay(1000);
        digitalWrite(13,LOW);
        delay(1000);
    }

    void loop() {
        // F√ºgen Sie Ihren Hauptcode hier ein, der wiederholt ausgef√ºhrt wird:
        digitalWrite(13,HIGH);
        delay(200);
        digitalWrite(13,LOW);
        delay(200);
    }    

* Skizze 4: Meldet einen Fehler.

.. code-block:: C
    :emphasize-lines: 6,7,8,9

    void setup() {
        // F√ºgen Sie Ihren Setup-Code hier ein, der einmal ausgef√ºhrt wird:
        pinMode(13,OUTPUT);
    }

    digitalWrite(13,HIGH);
    delay(1000);
    digitalWrite(13,LOW);
    delay(1000);

    void loop() {
        // F√ºgen Sie Ihren Hauptcode hier ein, der wiederholt ausgef√ºhrt wird:
    }    

Mit Hilfe dieser Skizzen k√∂nnen wir mehrere Merkmale von ``setup-loop`` zusammenfassen.

* ``loop()`` wird wiederholt ausgef√ºhrt, nachdem das Board eingeschaltet wurde.
* ``setup()`` wird nur einmal ausgef√ºhrt, nachdem das Board eingeschaltet wurde.
* Nach dem Einschalten des Boards wird zuerst ``setup()`` und dann ``loop()`` ausgef√ºhrt.
* Der Code muss innerhalb des ``{}``-Bereichs von ``setup()`` oder ``loop()`` geschrieben werden, au√üerhalb des Rahmens tritt ein Fehler auf.

.. note::  
    Anweisungen wie ``digitalWrite(13,HIGH)`` dienen zur Steuerung der integrierten LED, und ihre Verwendung wird in sp√§teren Kapiteln ausf√ºhrlich besprochen.
