.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

Structure du Programme Arduino
================================

Jetons un coup d'≈ìil au nouveau fichier de sketch. Bien qu'il ait quelques lignes de code, c'est en r√©alit√© un sketch "vide". 
Le t√©l√©chargement de ce sketch sur la carte de d√©veloppement ne provoquera aucun effet.

.. code-block:: C

    void setup() {
    // put your setup code here, to run once:

    }

    void loop() {
    // put your main code here, to run repeatedly:

    }

Si nous supprimons ``setup()`` et ``loop()`` pour rendre le sketch vraiment ``blank``, vous constaterez qu'il ne passe pas la v√©rification. 
Ils sont l'√©quivalent du squelette humain, et sont indispensables.

Lors de la cr√©ation d'un sketch, ``setup()`` est ex√©cut√© en premier, et le code √† l'int√©rieur (dans ``{}``) est ex√©cut√© apr√®s que la carte soit aliment√©e ou r√©initialis√©e et seulement une fois. 
``loop()`` est utilis√© pour √©crire la fonction principale, et le code √† l'int√©rieur s'ex√©cute en boucle apr√®s l'ex√©cution de ``setup()``.

Pour mieux comprendre setup() et loop(), utilisons quatre sketches. Leur but est de faire clignoter la LED int√©gr√©e de l'Arduino. Veuillez ex√©cuter chaque exp√©rience √† tour de r√¥le et enregistrer leurs effets sp√©cifiques.

* Sketch 1 : Faire clignoter la LED int√©gr√©e en continu.

.. code-block:: C
    :emphasize-lines: 8,9,10,11

    void setup() {
        // put your setup code here, to run once:
        pinMode(13,OUTPUT); 
    }

    void loop() {
        // put your main code here, to run repeatedly:
        digitalWrite(13,HIGH);
        delay(500);
        digitalWrite(13,LOW);
        delay(500);
    }

* Sketch 2 : Faire clignoter la LED int√©gr√©e une seule fois. 

.. code-block:: C
    :emphasize-lines: 4,5,6,7

    void setup() {
        // put your setup code here, to run once:
        pinMode(13,OUTPUT);
        digitalWrite(13,HIGH);
        delay(500);
        digitalWrite(13,LOW);
        delay(500);
    }

    void loop() {
        // put your main code here, to run repeatedly:
    }

* Sketch 3 : Faire clignoter lentement la LED int√©gr√©e une fois, puis rapidement. 

.. code-block:: C
    :emphasize-lines: 4,5,6,7,12,13,14,15

    void setup() {
        // put your setup code here, to run once:
        pinMode(13,OUTPUT);
        digitalWrite(13,HIGH);
        delay(1000);
        digitalWrite(13,LOW);
        delay(1000);
    }

    void loop() {
        // put your main code here, to run repeatedly:
        digitalWrite(13,HIGH);
        delay(200);
        digitalWrite(13,LOW);
        delay(200);
    }    

* Sketch 4 : Signaler une erreur.

.. code-block:: C
    :emphasize-lines: 6,7,8,9

    void setup() {
        // put your setup code here, to run once:
        pinMode(13,OUTPUT);
    }

    digitalWrite(13,HIGH);
    delay(1000);
    digitalWrite(13,LOW);
    delay(1000);

    void loop() {
        // put your main code here, to run repeatedly:
    }    

Avec l'aide de ces sketches, nous pouvons r√©sumer plusieurs caract√©ristiques de ``setup-loop``.

* ``loop()`` s'ex√©cute de mani√®re r√©p√©t√©e apr√®s que la carte soit aliment√©e. 
* ``setup()`` s'ex√©cute une seule fois apr√®s que la carte soit aliment√©e. 
* Apr√®s que la carte soit aliment√©e, ``setup()`` s'ex√©cute en premier, suivi par ``loop()``. 
* Le code doit √™tre √©crit √† l'int√©rieur du cadre ``{}`` de ``setup()`` ou ``loop()``, en dehors du cadre, il y aura une erreur.

.. note::  
    Des instructions telles que ``digitalWrite(13,HIGH)`` sont utilis√©es pour contr√¥ler la LED int√©gr√©e, et nous parlerons de leur utilisation en d√©tail dans les chapitres suivants.



