.. note:: 

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez plus profond√©ment dans le monde de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Obtenez un acc√®s anticip√© aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des promotions et concours pendant les f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _connect_blynk:

1.3 Connexion de la carte R4 √† Blynk
=======================================

#. Reconnectez le module ESP8266 et la carte R4. Ici, le port s√©rie logiciel est utilis√©, donc les broches TX et RX sont respectivement connect√©es aux broches 2 et 3 de la carte R4.

    .. note::

        Le module ESP8266 n√©cessite un courant √©lev√© pour fournir un environnement de fonctionnement stable. Assurez-vous donc que la batterie 9V est branch√©e.

    .. image:: img/iot_1.4_bb.png



#. Cliquez sur la page **devices**, et vous verrez le nouvel appareil que vous venez de cr√©er. Ensuite, cliquez sur **developer tools**.

    .. image:: img/blynk_copy_developer.png

#. Vous verrez alors ``TEMPLATE_ID``, ``DEVICE_NAME`` et ``AUTH_TOKEN`` dans les **Firmware info**, que vous devrez copier plus tard.

    .. image:: img/blynk_copy_firmwareinfo.png

#. Ouvrez le fichier ``1.connect.ino`` situ√© dans le r√©pertoire ``3in1-kit\iot_project\1.connect`` ou copiez ce code dans l'**Arduino IDE**.

    .. raw:: html
        
        <iframe src=https://create.arduino.cc/editor/sunfounder01/1c0c1a8f-2551-484f-9f4f-d5d4117cc864/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

#. Remplacez les trois lignes de code suivantes que vous pouvez copier depuis les **Firmware info** de votre compte. Ces trois lignes de code permettront √† votre carte R4 de se connecter √† votre compte Blynk.

    .. code-block:: arduino

        #define BLYNK_TEMPLATE_ID "TMPLxxxxxx"
        #define BLYNK_DEVICE_NAME "Device"
        #define BLYNK_AUTH_TOKEN "YourAuthToken"

#. Remplissez les champs ``ssid`` et ``password`` avec le WiFi que vous utilisez.

    .. code-block:: arduino

        char ssid[] = "ssid";
        char pass[] = "password";

#. T√©l√©versez le code sur la carte R4, puis ouvrez le moniteur s√©rie et r√©glez le d√©bit en bauds √† 115200. Lorsque la carte R4 communique avec succ√®s avec Blynk, le moniteur s√©rie affichera le message ``ready``.

    .. image:: img/blynk_connect_network.png


    .. note::

        Si le message ``ESP is not responding`` appara√Æt lors de la connexion, suivez ces √©tapes :

        * Assurez-vous que la batterie 9V est branch√©e.
        * R√©initialisez le module ESP8266 en connectant la broche RST √† GND pendant 1 seconde, puis d√©branchez-la.
        * Appuyez sur le bouton de r√©initialisation de la carte R4.

        Parfois, il peut √™tre n√©cessaire de r√©p√©ter les op√©rations ci-dessus 3 √† 5 fois. Merci de faire preuve de patience.

#. Le statut de Blynk passera de **offline** √† **online**.

    .. image:: img/sp220607_170326.png
