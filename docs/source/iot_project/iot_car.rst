.. note::

    ¬°Hola, bienvenido a la Comunidad de Aficionados a Raspberry Pi, Arduino y ESP32 de SunFounder en Facebook! Profundiza en Raspberry Pi, Arduino y ESP32 con otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte de expertos**: Resuelve problemas posventa y desaf√≠os t√©cnicos con ayuda de nuestra comunidad y equipo.
    - **Aprender y compartir**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Vistas previas exclusivas**: Obt√©n acceso anticipado a anuncios de nuevos productos y avances.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s nuevos.
    - **Promociones festivas y sorteos**: Participa en sorteos y promociones de fiestas.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy!

.. _iot_car:

8. Coche IoT
====================

Para este proyecto, utilizamos la aplicaci√≥n Blynk en el tel√©fono m√≥vil para controlar el coche. Sin embargo, necesitas consultar :ref:`car_projects` para montar el coche y obtener una comprensi√≥n b√°sica de √©l.
En la era de la popularidad de la red 5G, este modo puede convertirse en uno de los principales m√©todos de producci√≥n en muchas industrias, as√≠ que vamos a experimentar este juego por adelantado.

**1. Construir el Circuito**

.. image:: img/wiring_iot_car.png
    :width: 800


**2. Editar el Tablero de Mandos**


Blynk en m√≥vil no puede editar Datastream, por lo que a√∫n necesitamos hacer estos pasos en el lado web.

#. Crea un **Datastream** de tipo **Virtual Pin** en la p√°gina de **Datastream**, para registrar el valor del eje X del joystick. Configura NOMBRE a ``Xvalue``, TIPO DE DATO a ``Integer``, y MIN y MAX a ``-10`` y ``10``.

    .. image:: img/sp220613_164507.png

#. Crea un **Datastream** de tipo **Virtual Pin** para registrar el valor del eje Y del joystick. Configura NOMBRE a ``Yvalue``, TIPO DE DATO a ``Integer``, MIN y MAX a ``-10`` y ``10``.

    .. image:: img/sp220613_164717.png

Luego necesitas hacer lo siguiente en tu tel√©fono.

1. Busca "Blynk IoT" (no Blynk(legacy)) en GOOGLE Play o APP Store para descargarla.
2. Despu√©s de abrir la APP, inicia sesi√≥n, esta cuenta debe ser la misma que la utilizada en el cliente web.
3. Luego ve al Tablero de Control (si no tienes uno, crea uno) y ver√°s que el Tablero de Control para m√≥vil y web son independientes entre s√≠.

.. image:: img/APP_1.jpg

4. Haz clic en el Icono de Edici√≥n.
5. Haz clic en el √°rea en blanco.
6. Selecciona un widget de Joystick.

.. image:: img/APP_2.jpg

7. Ahora ver√°s un widget de Joystick aparecer en el √°rea en blanco, haz clic en √©l.
8. Aparecer√°n los Ajustes del Joystick, selecciona los valores Xvalue y Yvalue que acabas de configurar en los datastreams.
9. Vuelve a la p√°gina del Tablero de Control y podr√°s operar el Joystick cuando quieras.

.. image:: img/APP_3.jpg

**3. Ejecutar el C√≥digo**


#. Abre el archivo ``8.iot_car.ino`` en la ruta ``3in1-kit\iot_project\8.iot_car``, o copia este c√≥digo en **Arduino IDE**.

    .. raw:: html 
        
        <iframe src=https://create.arduino.cc/editor/sunfounder01/a1db6c35-2f26-425c-8636-53d2df7936d7/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

#. Reemplaza el ``Template ID``, ``Device Name`` y ``Auth Token`` con los tuyos. Tambi√©n necesitas ingresar el ``ssid`` y ``password`` del WiFi que est√°s utilizando. Para tutoriales detallados, consulta :ref:`connect_blynk`.
#. Tras seleccionar la placa y puerto correctos, haz clic en el bot√≥n **Upoad**.

#. Abre el monitor Serial(configura la tasa de baudios a 115200) y espera un aviso como una conexi√≥n exitosa.

    .. image:: img/2_ready.png

    .. note::

        Si aparece el mensaje ``ESP is not responding`` al conectar, sigue estos pasos.

        * Aseg√∫rate de que la bater√≠a de 9V est√© conectada.
        * Restablece el m√≥dulo ESP8266 conectando el pin RST a GND durante 1 segundo, luego desench√∫falo.
        * Presiona el bot√≥n de reset en la placa R3.

        A veces, puede ser necesario repetir la operaci√≥n anterior 3-5 veces, por favor ten paciencia.

#. Ahora desconecta el cable USB y alimenta el carro solo con una bater√≠a de 9V, luego espera a que se encienda el LED, indicando que el coche est√° conectado a Blynk.
#. Abre Blynk en tu tel√©fono y puedes usar el widget de Joystick para controlar el movimiento del coche.

    .. image:: img/iot_car.jpg



**¬øC√≥mo funciona?**

Estas funciones se utilizan para controlar el movimiento del coche.

.. code-block:: arduino

    void moveForward(int speed) {...}
    void moveBackward(int speed) {...}
    void turnRight(int speed) {...}
    void turnLeft(int speed) {...}
    void stopMove() {...}

La secci√≥n IoT lee los valores del widget de Joystick y los asigna a las variables ``Xvalue`` y ``Yvalue``.

.. code-block:: arduino

    int Xvalue = 0;
    int Yvalue = 0;

    BLYNK_WRITE(V9)
    {
        Xvalue = param.asInt();
    }

    BLYNK_WRITE(V10)
    {
        Yvalue = param.asInt();
    }

En ``loop()``, haz que el coche realice diferentes acciones basadas en ``Xvalue`` y ``Yvalue``.

.. code-block:: arduino

    if (Yvalue >= 5) {
        moveForward(255);
    } else if (Yvalue <= -5) {
        moveBackward(255);
    } else if (Xvalue >= 5) {
        turnRight(150);
    } else if (Xvalue <= -5) {
        turnLeft(150);
    } else {
        stopMove();
    }

Adem√°s, a√±ade una determinaci√≥n de estado de red a ``loop()`` para encender un LED si est√° conectado a Blynk Cloud.

.. code-block:: arduino

    if (!Blynk.connected()) {
        digitalWrite(ledPin, LOW);
        Serial.print("offline!");
        bool result = Blynk.connect();
        Serial.println(result);
    } else {
        digitalWrite(ledPin, HIGH);
    }