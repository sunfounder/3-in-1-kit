.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _iot_car:

8. Voiture IoT
====================

Pour ce projet, nous avons utilis√© l'application Blynk sur le t√©l√©phone portable pour contr√¥ler la voiture. Mais vous devez vous r√©f√©rer √† :ref:`car_projects` pour assembler la voiture et pour en comprendre les bases.
√Ä l'√®re de la popularit√© du r√©seau 5G, ce mode pourrait devenir l'une des principales m√©thodes de production dans de nombreuses industries, alors exp√©rimentons ce jeu en avance.

**1. Construire le Circuit**

.. image:: img/wiring_iot_car.png
    :width: 800


**2. √âditer le Tableau de Bord**

Blynk sur mobile ne peut pas √©diter les Datastream, nous devons donc toujours effectuer ces √©tapes sur le c√¥t√© web.

#. Cr√©ez un **Datastream** de type **Virtual Pin** sur la page **Datastream**, pour enregistrer la valeur de l'axe X du joystick. Nommez-le ``Xvalue``, r√©glez le TYPE DE DONN√âES sur ``Integer``, et MIN et MAX sur ``-10`` et ``10``.

    .. image:: img/sp220613_164507.png

#. Cr√©ez un **Datastream** de type **Virtual Pin** pour enregistrer la valeur de l'axe Y du joystick. Nommez-le ``Yvalue``, r√©glez le TYPE DE DONN√âES sur ``Integer``, MIN et MAX sur ``-10`` et ``10``.

    .. image:: img/sp220613_164717.png

Ensuite, vous devez faire ce qui suit sur votre t√©l√©phone.

1. Recherchez "Blynk IoT" (pas Blynk(legacy)) sur GOOGLE Play ou l'APP Store pour le t√©l√©charger.
2. Apr√®s avoir ouvert l'APP, connectez-vous, ce compte doit √™tre le m√™me que celui utilis√© sur le client web.
3. Allez ensuite sur le tableau de bord (si vous n'en avez pas, cr√©ez-en un) et vous verrez que les tableaux de bord mobiles et web sont ind√©pendants l'un de l'autre.

.. image:: img/APP_1.jpg

4. Cliquez sur l'ic√¥ne √âditer.
5. Cliquez sur la zone vide.
6. S√©lectionnez un widget Joystick.

.. image:: img/APP_2.jpg

7. Maintenant, vous verrez un widget Joystick appara√Ætre dans la zone vide, cliquez dessus.
8. Les param√®tres du Joystick appara√Ætront, s√©lectionnez les Xvalue et Yvalue que vous venez de r√©gler dans les datastreams.
9. Retournez sur la page du tableau de bord et vous pourrez utiliser le Joystick quand vous le souhaitez.

.. image:: img/APP_3.jpg


**3. Ex√©cutez le Code**


#. Ouvrez le fichier ``8.iot_car.ino`` situ√© dans le dossier ``3in1-kit\iot_project\8.iot_car``, ou copiez ce code dans **Arduino IDE**.

    .. raw:: html 
        
        <iframe src=https://create.arduino.cc/editor/sunfounder01/a1db6c35-2f26-425c-8636-53d2df7936d7/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

#. Remplacez le ``Template ID``, ``Device Name`` et ``Auth Token`` par les v√¥tres. Vous devez √©galement entrer le ``ssid`` et le ``password`` du WiFi que vous utilisez. Pour des tutoriels d√©taill√©s, veuillez vous r√©f√©rer √† :ref:`connect_blynk`.
#. Apr√®s avoir s√©lectionn√© la bonne carte et le bon port, cliquez sur le bouton **Upoad**.

#. Ouvrez le moniteur s√©rie (r√©glez le d√©bit en bauds sur 115200) et attendez qu'un message tel qu'une connexion r√©ussie apparaisse.

    .. image:: img/2_ready.png

    .. note::

        Si le message ``ESP is not responding`` appara√Æt lors de la connexion, veuillez suivre ces √©tapes.

        * Assurez-vous que la batterie 9V est branch√©e.
        * R√©initialisez le module ESP8266 en connectant la broche RST √† GND pendant 1 seconde, puis d√©branchez-la.
        * Appuyez sur le bouton de r√©initialisation de la carte R3.

        Parfois, il peut √™tre n√©cessaire de r√©p√©ter l'op√©ration ci-dessus 3 √† 5 fois, veuillez √™tre patient.

#. Maintenant, d√©branchez le c√¢ble USB et alimentez la voiture avec une batterie 9V uniquement, puis attendez que la LED s'allume, indiquant que la voiture est connect√©e √† Blynk.
#. Ouvrez Blynk sur votre t√©l√©phone et vous pouvez utiliser le widget Joystick pour contr√¥ler le mouvement de la voiture.

    .. image:: img/iot_car.jpg



**Comment √ßa fonctionne ?**

Ces fonctions sont utilis√©es pour contr√¥ler le mouvement de la voiture.

.. code-block:: arduino

    void moveForward(int speed) {...}
    void moveBackward(int speed) {...}
    void turnRight(int speed) {...}
    void turnLeft(int speed) {...}
    void stopMove() {...}

La section IoT lit les valeurs du widget Joystick et les assigne aux variables ``Xvalue`` et ``Yvalue``.

.. code-block:: arduino

    int Xvalue = 0;
    int Yvalue = 0;

    BLYNK_WRITE(V9)
    {
        Xvalue = param.asInt();
    }

    BLYNK_WRITE(V10)
    {
        Yvalue = param.asInt();
    }

Dans ``loop()``, faites ex√©cuter diff√©rentes actions √† la voiture en fonction des ``Xvalue`` et ``Yvalue``.

.. code-block:: arduino

    if (Yvalue >= 5) {
        moveForward(255);
    } else if (Yvalue <= -5) {
        moveBackward(255);
    } else if (Xvalue >= 5) {
        turnRight(150);
    } else if (Xvalue <= -5) {
        turnLeft(150);
    } else {
        stopMove();
    }

Ajoutez √©galement une d√©termination de l'√©tat du r√©seau √† ``loop()`` pour allumer une LED si elle est connect√©e au Cloud Blynk.

.. code-block:: arduino

    if (!Blynk.connected()) {
        digitalWrite(ledPin, LOW);
        Serial.print("offline!");
        bool result = Blynk.connect();
        Serial.println(result);
    } else {
        digitalWrite(ledPin, HIGH);
    }