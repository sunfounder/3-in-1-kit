.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _sh_breakout_clone:

2.18 SPIEL - Breakout-Klon
============================

Hier verwenden wir das Potentiometer, um ein Breakout-Klon-Spiel zu spielen.

Nachdem Sie auf die gr√ºne Flagge geklickt haben, m√ºssen Sie das Potentiometer verwenden, um den Schl√§ger auf der B√ºhne zu steuern, um den Ball zu fangen. Dadurch kann er nach oben steigen und die Ziegelsteine treffen. Wenn alle Ziegelsteine verschwinden, haben Sie gewonnen. Wenn Sie den Ball nicht fangen, haben Sie verloren.

.. image:: img/17_brick.png

Ben√∂tigte Komponenten
------------------------

F√ºr dieses Projekt ben√∂tigen wir die folgenden Komponenten.

Es ist definitiv praktisch, ein komplettes Set zu kaufen, hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - 3 in 1 Starter Kit
        - 380+
        - |link_3IN1_kit|

Sie k√∂nnen sie auch einzeln √ºber die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENBESCHREIBUNG
        - KAUF-LINK

    *   - :ref:`cpn_uno`
        - |link_Uno_R3_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_potentiometer`
        - |link_potentiometer_buy|

Schaltung aufbauen
-----------------------

Das Potentiometer ist ein Widerstandselement mit 3 Anschl√ºssen, die 2 seitlichen Pins sind mit 5V und GND verbunden, und der mittlere Pin ist mit A0 verbunden. Nach der Umwandlung durch den ADC-Wandler des Arduino-Boards liegt der Wertebereich zwischen 0-1023.

.. image:: img/circuit/potentiometer_circuit.png

Programmierung
------------------

Es gibt 3 Sprites auf der B√ºhne.

**1. Schl√§ger-Sprite (Paddle sprite)**

Das Ziel des **Paddle** ist es, dass die Ausgangsposition in der Mitte des unteren B√ºhnenrandes liegt und durch ein Potentiometer gesteuert wird, um es nach links oder rechts zu bewegen.

* L√∂schen Sie den Standard-Sprite, verwenden Sie die Schaltfl√§che **Choose a Sprite**, um den **Paddle**-Sprite hinzuzuf√ºgen, und setzen Sie seine x- und y-Koordinaten auf (0, -140).

.. image:: img/17_padd1.png

* Gehen Sie zur Seite **Costumes**, entfernen Sie den Umriss und √§ndern Sie seine Farbe in dunkelgrau.

.. image:: img/17_padd3.png

* Jetzt skripten Sie den **Paddle**-Sprite, um seine Anfangsposition auf (0, -140) zu setzen, wenn die gr√ºne Flagge angeklickt wird, und lesen Sie den Wert von A0 (Potentiometer) in die Variable **a0**. Da der **Paddle**-Sprite sich von links nach rechts auf der B√ºhne bei x-Koordinaten -195~195 bewegt, m√ºssen Sie den [map] Block verwenden, um den Bereich der Variable **a0** von 0~1023 auf -195~195 abzubilden.

.. image:: img/17_padd2.png

* Jetzt k√∂nnen Sie das Potentiometer drehen und √ºberpr√ºfen, ob der **Paddle** sich links und rechts auf der B√ºhne bewegen kann.


**2. Ball-Sprite**

Der Ball-Sprite soll sich auf der B√ºhne bewegen und abprallen, wenn er den Rand ber√ºhrt. Er prallt nach unten ab, wenn er den Block oberhalb der B√ºhne ber√ºhrt. Er prallt nach oben ab, wenn er w√§hrend des Fallens den Paddle-Sprite ber√ºhrt. Tut er das nicht, wird das Skript gestoppt und das Spiel endet.

* F√ºgen Sie den **Ball**-Sprite hinzu.

.. image:: img/17_ball1.png

* Wenn auf die gr√ºne Flagge geklickt wird, setzen Sie den Winkel des **Ball**-Sprites auf 45¬∞ und die Anfangsposition auf (0, -120).

.. image:: img/17_ball2.png

* Lassen Sie den **Ball**-Sprite sich auf der B√ºhne bewegen und abprallen, wenn er den Rand ber√ºhrt. Klicken Sie auf die gr√ºne Flagge, um den Effekt zu sehen.

.. image:: img/17_ball3.png

* Wenn der **Ball**-Sprite den **Paddle**-Sprite ber√ºhrt, f√ºhren Sie eine Reflexion durch. Der einfache Weg, dies zu tun, ist, den Winkel direkt umzukehren. Dann werden Sie jedoch feststellen, dass der Pfad des Balls v√∂llig festgelegt ist, was zu langweilig ist. Daher verwenden wir das Zentrum der beiden Sprites, um den Ball in die entgegengesetzte Richtung des Zentrums der Abschirmung abprallen zu lassen.

.. image:: img/17_ball4.png

.. image:: img/17_ball6.png

* Wenn der **Ball**-Sprite an den Rand der B√ºhne f√§llt, wird das Skript gestoppt und das Spiel endet.

.. image:: img/17_ball5.png


**3. Block1-Sprite**

Der **Block1**-Sprite soll mit dem Effekt erscheinen, 4x8 Klone von sich selbst in einer zuf√§lligen Farbe oberhalb der B√ºhne zu erstellen und einen Klon zu l√∂schen, wenn er vom **Ball**-Sprite ber√ºhrt wird.

Der **Block1**-Sprite ist nicht in der **PictoBlox**-Bibliothek verf√ºgbar. Sie m√ºssen ihn selbst zeichnen oder mit einem vorhandenen Sprite modifizieren. Hier werden wir ihn mit dem **Button3**-Sprite modifizieren.

* Nachdem Sie den **Button3**-Sprite hinzugef√ºgt haben, gehen Sie zur Seite **Costumes**. L√∂schen Sie zuerst **button-a**, verkleinern Sie dann sowohl die Breite als auch die H√∂he von **button-b** und √§ndern Sie den Sprite-Namen in **Block1**, wie im folgenden Bild gezeigt.

.. note::

    * F√ºr die Breite von **Block1** k√∂nnen Sie wahrscheinlich auf dem Bildschirm simulieren, um zu sehen, ob Sie 8 in einer Reihe platzieren k√∂nnen. Wenn nicht, reduzieren Sie die Breite entsprechend.
    * Beim Verkleinern des **Block1**-Sprites m√ºssen Sie den Mittelpunkt in der Mitte des Sprites halten.

.. image:: img/17_bri2.png

* Erstellen Sie jetzt zuerst 2 Variablen, **block**, um die Anzahl der Bl√∂cke und **roll**, um die Anzahl der Reihen zu speichern.

.. image:: img/17_bri3.png

* Wir m√ºssen einen Klon des **Block1**-Sprites erstellen, damit er von links nach rechts, von oben nach unten, eins nach dem anderen, insgesamt 4x8 mit zuf√§lligen Farben angezeigt wird.

.. image:: img/17_bri4.png

* Nachdem das Skript geschrieben wurde, klicken Sie auf die gr√ºne Flagge und schauen Sie sich die Anzeige auf der B√ºhne an. Wenn es zu kompakt oder zu klein ist, k√∂nnen Sie die Gr√∂√üe √§ndern.

.. image:: img/17_bri5.png

* Schreiben Sie nun das Ausl√∂seereignis. Wenn der geklonte **Block1**-Sprite den **Ball**-Sprite ber√ºhrt, l√∂schen Sie den Klon und senden Sie die Nachricht **crush**.

.. image:: img/17_bri6.png

* Gehen Sie zur√ºck zum **Ball**-Sprite. Wenn die √úbertragung **crush** empfangen wird (der **Ball**-Sprite ber√ºhrt den Klon des **Block1**-Sprites), wird der **Ball** aus der entgegengesetzten Richtung abgeschossen.

.. image:: img/17_ball7.png






