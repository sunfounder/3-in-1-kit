.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _sh_test:

3.1 Tester la Voiture
======================

Ici, vous apprendrez √† √©crire des scripts pour faire avancer la voiture, mais vous devez vous r√©f√©rer √† :ref:`car_projects` pour assembler la voiture et pour obtenir une compr√©hension de base de celle-ci.

Mais avant de commencer le projet, vous devez conna√Ætre les √©tapes pour utiliser PictoBlox en :ref:`upload_mode`.

Composants Requis
---------------------

Pour ce projet, nous avons besoin des composants suivants.

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - 3 in 1 Starter Kit
        - 380+
        - |link_3IN1_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_uno`
        - |link_Uno_R3_buy|
    *   - :ref:`cpn_l9110` 
        - \-
    *   - :ref:`cpn_tt_motor`
        - \-

Construire le Circuit
-----------------------

Le module de pilote de moteur L9110 est un module de pilote de moteur haute puissance pour entra√Æner des moteurs DC et pas √† pas. Le module L9110 peut contr√¥ler jusqu'√† 4 moteurs DC, ou 2 moteurs DC avec contr√¥le de direction et de vitesse.


Connectez les fils entre le module L9110 et la carte R3 selon le sch√©ma ci-dessous.


.. list-table:: 
    :widths: 25 25 50
    :header-rows: 1

    * - Module L9110
      - Carte R3
      - Moteur
    * - A-1B
      - 5
      - 
    * - A-1A
      - 6
      - 
    * - B-1B(B-2A)
      - 9
      - 
    * - B-1A
      - 10
      - 
    * - OB(B)
      - 
      - Fil noir du moteur droit
    * - OA(B)
      - 
      - Fil rouge du moteur droit
    * - OB(A)
      - 
      - Fil noir du moteur gauche
    * - OA(A)
      - 
      - Fil rouge du moteur gauche

.. image:: img/car_2.png
    :width: 800

Programmation
-------------------

**1. Faire avancer la voiture**

Sur la base du c√¢blage ci-dessus, nous savons que les broches 5 et 6 sont utilis√©es pour contr√¥ler la rotation du moteur droit et les broches 9 et 10 pour celle du moteur gauche. √âcrivons maintenant un script pour faire avancer la voiture.

Apr√®s avoir s√©lectionn√© la carte Arduino Uno, passez en :ref:`upload_mode` et √©crivez le script selon le sch√©ma suivant.

.. image:: img/1_test1.png

Cliquez sur le bouton **Upload Code** pour uploader le code sur la carte R3. Une fois termin√©, vous verrez les deux moteurs de la voiture avancer (si vous posez la voiture sur le sol, elle avancera en ligne droite, mais peut-√™tre la voiture ira en courbe car la vitesse des deux moteurs est un peu diff√©rente).

Si les deux ne tournent pas en avant, mais que les situations suivantes se produisent, vous devez r√©ajuster le c√¢blage des deux moteurs.

* Si les deux moteurs tournent en arri√®re en m√™me temps (le moteur gauche tourne dans le sens des aiguilles d'une montre, le moteur droit tourne dans le sens inverse), inversez le c√¢blage des moteurs gauche et droit en m√™me temps, OA(A) et OB(A) √©changent, OA(B) et OB(B) √©changent.
* Si le moteur gauche tourne en arri√®re (rotation dans le sens des aiguilles d'une montre), √©changez le c√¢blage de OA(B) et OB(B) du moteur gauche.
* Si le moteur droit tourne en arri√®re (rotation dans le sens inverse des aiguilles d'une montre), inversez le c√¢blage de OA(A) et OB(A) du moteur droit.


**2. Cr√©ation d'un bloc**

Pour rendre le script plus propre et facile √† utiliser, pla√ßons ici tous les blocs qui contr√¥lent le mouvement en avant dans un bloc, et lors de son utilisation, appelez directement ce bloc.

Cliquez sur **Make a Block** dans la palette **My Blocks**.

.. image:: img/1_test31.png

Entrez le nom du bloc - **forward** et cochez **Add an input**, d√©finissez le nom de l'entr√©e sur **speed**.

.. image:: img/1_test32.png

Glissez-d√©posez les blocs qui contr√¥lent l'avancement des voitures dans **forward**, notez que vous devez ajouter le param√®tre - **speed** aux broches 6 et 9.

.. image:: img/1_test33.png

Appelez le bloc cr√©√© dans le bloc [Forward] - **forward**. En mode T√©l√©versement, le bloc [When Arduino Uno starts up] doit √™tre ajout√© au d√©but.

* La plage de vitesse de rotation du moteur est de 100 √† 255.

.. image:: img/1_test3.png
    
**3. Ajuster la vitesse des moteurs**

Comme il peut y avoir une l√©g√®re diff√©rence dans la vitesse des 2 moteurs, entra√Ænant la voiture √† ne pas avancer en ligne droite, nous pouvons donner aux moteurs gauche et droit des vitesses diff√©rentes pour garder la voiture avan√ßant le plus possible en ligne droite.

Comme ma voiture avance lentement vers la droite, r√©duisez ici la vitesse du moteur gauche.

.. image:: img/1_test2.png





