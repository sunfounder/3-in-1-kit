.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

.. _sh_humiture:

2.9 温湿度の読取り
=================================================

前のプロジェクトではステージモードを使用していましたが、アップロードモードでしか使用できない機能もあります。例えば、シリアル通信の機能です。このプロジェクトでは、 :ref:`upload_mode` のシリアルモニターを使用して、DHT11の温湿度を表示します。

.. image:: img/11_serial.png

学べること
---------------------

- DHT11モジュールからの温湿度の取得
- :ref:`upload_mode` のためのシリアルモニタ
- 拡張の追加

必要な部品
---------------------

このプロジェクトには以下のコンポーネントが必要です。

一式を購入することは非常に便利です。リンクはこちらです：

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - 名前
        - このキットのアイテム
        - リンク
    *   - 3 in 1 Starter Kit
        - 380+
        - |link_3IN1_kit|

以下のリンクから別々に購入することもできます。

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - コンポーネントの紹介
        - 購入リンク

    *   - :ref:`cpn_uno`
        - |link_Uno_R3_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_dht11` 
        - \-

回路の作成
-----------------------

DHT11のデジタル温湿度センサーは、温度と湿度の較正されたデジタル信号出力を含む複合センサーです。

次の図に従って回路を組み立ててください。

.. image:: img/circuit/dht11_circuit.png

プログラミング
------------------

**1. 拡張の追加**

**Upload** モードに切り替え、左下の **Add Extension** ボタンをクリックし、 **Communication** を選択して追加します。それがパレットエリアの最後に表示されます。

.. image:: img/11_addcom.png

**2. Arduino Unoとシリアルモニターの初期化**

**Upload** モードでArduino Unoを起動し、シリアルポートのボーレートを設定します。

* [Arduino起動時]: **Upload** モードでArduino Unoを起動します。
* [シリアルボーレートを設定]: **Communications** パレットから、シリアルポート0のボーレートを設定します。デフォルトは115200です。Mega2560を使用している場合は、シリアルポート0~3でボーレートを設定することができます。

.. image:: img/11_init.png

**3. 温度と湿度の読取り**

温度と湿度をそれぞれ保存するための2つの変数 **tem** と **humi** を作成します。ブロックをドラッグ&ドロップすると、コードが右側に表示されます。

.. image:: img/11_readtem.png

**4. シリアルモニターに表示**

読み取った温度と湿度をシリアルモニターに書き込みます。転送が速すぎてPictoBloxがジャムを起こすのを避けるため、[wait seconds]ブロックを使用して、次回の印刷のための一定の時間間隔を追加します。

.. image:: img/11_writeserial.png

**5. コードのアップロード**

**Stage** モードとは異なり、 **Upload** モードのコードは、効果を見るために **Upload Code** ボタンを使用してArduinoボードにアップロードする必要があります。このようにして、USBケーブルを抜いてもプログラムが実行され続けます。

.. image:: img/11_upload.png

**6. シリアルモニターの起動**

今、 **Serial Monitor** を開き、温度と湿度を確認します。

.. image:: img/11_serial.png

