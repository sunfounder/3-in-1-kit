.. note::

    Bonjour et bienvenue dans la CommunautÃ© Facebook des passionnÃ©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profondÃ©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionnÃ©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : RÃ©solvez les problÃ¨mes aprÃ¨s-vente et les dÃ©fis techniques avec l'aide de notre communautÃ© et de notre Ã©quipe.
    - **Apprendre et partager** : Ã‰changez des astuces et des tutoriels pour amÃ©liorer vos compÃ©tences.
    - **AperÃ§us exclusifs** : AccÃ©dez en avant-premiÃ¨re aux annonces de nouveaux produits et aux aperÃ§us.
    - **RÃ©ductions spÃ©ciales** : Profitez de rÃ©ductions exclusives sur nos produits les plus rÃ©cents.
    - **Promotions festives et cadeaux** : Participez Ã  des cadeaux et des promotions de vacances.

    ðŸ‘‰ PrÃªt Ã  explorer et Ã  crÃ©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _sh_pendulum:

2.10 Pendule
=====================

Dans ce projet, nous allons rÃ©aliser un pendule en forme de flÃ¨che, tandis que le servo-moteur suivra la rotation.

.. image:: img/12_pun.png

Vous Apprendrez
---------------------

- Comment fonctionne un servo-moteur et sa plage d'angle
- Dessiner un sprite et placer le point central sur la queue.

Composants requis
---------------------

Pour ce projet, nous aurons besoin des composants suivants.

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - Ã‰LÃ‰MENTS DE CE KIT
        - LIEN
    *   - 3 in 1 Starter Kit
        - 380+
        - |link_3IN1_kit|

Vous pouvez Ã©galement les acheter sÃ©parÃ©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_uno`
        - |link_Uno_R3_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_servo`
        - |link_servo_buy|

Construisez le Circuit
-----------------------

Un servo-moteur est un moteur engrenÃ© qui ne peut tourner que de 180 degrÃ©s. Il est contrÃ´lÃ© en envoyant des impulsions Ã©lectriques depuis votre carte de circuit. Ces impulsions indiquent au servo-moteur la position dans laquelle il doit se dÃ©placer.

Le servo-moteur a trois fils : le fil marron est le GND, le rouge est le VCC (Ã  connecter Ã  3.3V), et l'orange est le fil de signal. La plage d'angle est de 0 Ã  180 degrÃ©s.

Construisez maintenant le circuit selon le schÃ©ma ci-dessous.

.. image:: img/circuit/servo_circuit.png

Programmation
------------------

**1. Peindre un sprite**

Supprimez le sprite par dÃ©faut, sÃ©lectionnez le bouton Sprite et cliquez sur **Paint**, un sprite vierge **Sprite1** apparaÃ®tra.

.. image:: img/12_paint1.png

Sur la page **Costumes** ouverte, utilisez l'**Line tool** pour dessiner une flÃ¨che.

.. note::

    * Assurez-vous de commencer Ã  dessiner la flÃ¨che du centre du canevas vers l'extÃ©rieur afin que la flÃ¨che tourne en cercle avec le point central comme origine.
    * Maintenez la touche Shift pour rendre l'angle de la ligne droit ou Ã  45 degrÃ©s.

.. image:: img/12_paint2.png

AprÃ¨s avoir dessinÃ©, le sprite **arrow** s'affichera sur la scÃ¨ne, nommez-le **arrow**. Puis cliquez sur le nombre aprÃ¨s **Direction**, un cadran circulaire apparaÃ®tra, maintenant faites glisser cette flÃ¨che et voyez si le sprite **arrow** sur la scÃ¨ne tourne avec la queue comme origine.

.. image:: img/12_paint3.png

Pour faire osciller le sprite **arrow** de la gauche vers la droite, la plage d'angle est de -90 Ã  -180, 180 Ã  90.

.. image:: img/12_paint4.png

.. image:: img/12_paint5.png

**2. CrÃ©ation d'une variable**.

CrÃ©ez une variable appelÃ©e **servo**, qui stocke la valeur de l'angle et dÃ©finit la valeur initiale Ã  270.

.. image:: img/12_servo.png

**3. Oscillation de la gauche vers la droite**

Faites maintenant osciller le sprite **arrow** de la position -90 degrÃ©s Ã  gauche Ã  la position 90 degrÃ©s Ã  droite.

Avec le bloc [repeat], ajoutez -10 Ã  la variable Ã  chaque fois, et vous atteindrez 90 degrÃ©s en 18 passages. Ensuite, utilisez le bloc [point in block] pour faire tourner le sprite flÃ¨che vers ces angles.

Comme l'angle de rotation du sprite est de -180 ~ 180, les angles en dehors de cette plage sont convertis par les conditions suivantes.

* Si angle > 180, alors angle -360.

.. image:: img/12_servo1.png

**4. Faire tourner le Servo**

Lorsque vous cliquez sur le drapeau vert, vous verrez la flÃ¨che tourner rapidement vers la droite puis revenir vers la gauche, utilisez donc un bloc [wait seconds] ici pour ralentir la rotation. Utilisez Ã©galement le bloc [set servo on to angle] pour faire tourner le servo connectÃ© Ã  la carte Arduino vers un angle spÃ©cifique.

.. image:: img/12_servo2.png

**5. Oscillation de droite Ã  gauche**

De la mÃªme maniÃ¨re, faites tourner lentement le servo et le sprite **arrow** de la droite vers la gauche.

* Si angle > 180, alors angle -360.

.. image:: img/12_servo3.png

